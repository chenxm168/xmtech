2020-09-29 11:09:22,457 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:09:22,515 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:09:22,527 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:09:22,531 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 11:09:22,534 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 11:09:22,536 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:09:22,537 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:09:22,538 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:09:22,539 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:09:22,540 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 11:09:22,541 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:09:22,542 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:09:22,684 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 11:09:22,685 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:09:22,699 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:09:22,702 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:09:22,707 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:09:22,708 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:09:22,710 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:09:22,715 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:09:22,722 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:09:22,723 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:09:22,884 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:09:22,885 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:09:22,887 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:09:22,888 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:09:22,889 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:09:22,890 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:09:22,914 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:09:22,918 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:09:23,086 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:09:23,088 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:09:23,090 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:09:23,091 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:09:23,093 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:09:23,095 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:09:23,097 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:09:23,286 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:09:23,402 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:23,404 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:09:23,405 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:09:23,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:09:23,409 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:09:23,485 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:09:23,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:09:23,491 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:09:23,493 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:09:23,494 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:09:23,496 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:09:23,685 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:09:23,891 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:23,892 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:09:23,893 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:09:23,894 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:09:23,895 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:09:23,896 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:09:23,897 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:09:23,898 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:09:23,898 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:09:24,085 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:09:24,087 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:09:24,090 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:09:24,094 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:24,096 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:09:24,284 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:09:24,285 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:09:24,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:09:24,287 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:09:24,287 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:09:24,288 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:09:24,289 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:09:24,290 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:09:24,484 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:09:24,485 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:09:24,487 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:24,487 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:09:24,488 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:09:24,684 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:09:24,685 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:09:24,686 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:09:24,687 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:09:24,694 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:09:24,695 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:09:24,696 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:09:24,697 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:09:24,884 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:09:24,886 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:24,887 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:09:24,888 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:09:24,888 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:09:25,084 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:09:25,085 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:09:25,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:09:25,086 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:09:25,087 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:09:25,088 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:09:25,089 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:09:25,284 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:09:25,716 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:09:25,718 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:09:25,718 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:09:25,719 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:09:25,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:09:25,721 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:09:25,722 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:09:25,723 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:09:25,724 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:09:25,745 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:09:25,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:09:25,747 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:09:25,748 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:09:25,749 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:09:28,078 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:09:28,080 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:09:28,093 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:09:28,094 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:09:47,678 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:09:47,680 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:09:47,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:09:47,682 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:09:47,707 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:09:47,708 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:09:47,708 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:09:47,709 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:16:51,702 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:16:51,764 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:16:51,776 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:16:51,779 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 11:16:51,781 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 11:16:51,783 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:16:51,785 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:16:51,786 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:16:51,787 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:16:51,787 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:16:51,788 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:16:51,789 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:16:51,915 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:16:51,925 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:16:51,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:16:51,942 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:16:51,953 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:16:51,954 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:16:51,955 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:16:51,963 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:16:51,991 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:16:51,992 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:16:52,116 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:16:52,119 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:16:52,122 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:16:52,128 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:16:52,130 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:16:52,131 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:16:52,144 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:16:52,146 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:16:52,316 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:16:52,319 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:16:52,321 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:16:52,322 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:16:52,324 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:16:52,326 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:16:52,329 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:16:52,516 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:16:52,632 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:52,634 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:16:52,636 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:16:52,639 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:16:52,642 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:16:52,716 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:16:52,717 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:16:52,720 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:16:52,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:16:52,722 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:16:52,723 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:16:52,915 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:16:53,073 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:53,074 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:16:53,075 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:16:53,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:16:53,077 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:16:53,078 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:16:53,115 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:16:53,116 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:16:53,117 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:16:53,118 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:16:53,119 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:16:53,315 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:16:53,317 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:53,318 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:16:53,319 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:16:53,320 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:16:53,321 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:16:53,322 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:16:53,323 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:16:53,515 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:16:53,516 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:16:53,518 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:16:53,519 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:16:53,520 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:16:53,716 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:53,717 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:16:53,718 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:16:53,721 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:16:53,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:16:53,724 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:16:53,730 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:16:53,731 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:16:53,732 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:16:53,915 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:16:53,916 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:16:53,917 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:16:53,919 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:54,115 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:16:54,116 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:16:54,117 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:16:54,119 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:16:54,120 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:16:54,121 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:16:54,123 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:16:54,124 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:16:54,125 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:16:54,315 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:16:54,316 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:16:54,704 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:16:54,705 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:16:54,706 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:16:54,707 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:16:54,708 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:16:54,709 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:16:54,710 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:16:54,711 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:16:54,713 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:16:54,716 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:16:54,717 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:16:54,718 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:16:54,719 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:16:54,720 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:16:56,555 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:16:56,558 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:16:56,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:16:56,571 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:17:07,769 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:17:07,770 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:17:07,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:17:07,772 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:17:07,801 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:17:07,802 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:17:07,803 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:17:07,804 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:18:27,241 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:18:27,297 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:18:27,309 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:18:27,312 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 11:18:27,314 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 11:18:27,316 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:18:27,317 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:18:27,318 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:18:27,319 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:18:27,320 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:18:27,321 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:18:27,322 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:18:27,464 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:18:27,465 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:18:27,480 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:18:27,482 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:18:27,488 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:18:27,489 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:18:27,490 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:18:27,496 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:18:27,497 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:18:27,519 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:18:27,664 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:18:27,665 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:18:27,667 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:18:27,669 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:18:27,670 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:18:27,671 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:18:27,682 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:18:27,684 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:18:27,865 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:18:27,868 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:18:27,870 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:18:27,871 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:18:27,873 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:18:27,875 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:18:27,877 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:18:28,065 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:18:28,159 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:28,161 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:18:28,162 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:18:28,166 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:18:28,169 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:18:28,264 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:18:28,266 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:18:28,268 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:18:28,269 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:18:28,270 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:18:28,271 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:18:28,464 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:18:28,634 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:28,635 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:18:28,636 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:18:28,637 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:18:28,638 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:18:28,639 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:18:28,664 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:18:28,665 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:18:28,666 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:18:28,667 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:18:28,668 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:18:28,864 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:18:28,866 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:28,867 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:18:28,868 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:18:28,869 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:18:28,870 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:18:28,871 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:18:28,872 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:18:29,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:18:29,065 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:18:29,066 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:18:29,067 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:18:29,068 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:18:29,265 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:29,266 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:18:29,267 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:18:29,268 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:18:29,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:18:29,270 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:18:29,271 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:18:29,278 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:18:29,279 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:18:29,464 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:18:29,465 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:18:29,466 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:18:29,468 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:29,664 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:18:29,665 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:18:29,666 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:18:29,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:18:29,668 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:18:29,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:18:29,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:18:29,671 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:18:29,672 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:18:29,864 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:18:29,865 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:18:30,255 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:18:30,256 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:18:30,257 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:18:30,258 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:18:30,259 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:18:30,260 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:18:30,261 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:18:30,262 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:18:30,264 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:18:30,266 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:18:30,267 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:18:30,268 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:18:30,269 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:18:30,270 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:18:32,132 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:18:32,135 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:18:32,146 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:18:32,147 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:18:40,787 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:18:40,788 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:18:40,789 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:18:40,790 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:18:40,817 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:18:40,818 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:18:40,819 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:18:40,820 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:23:32,042 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:23:32,108 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:23:32,120 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:23:32,123 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 11:23:32,125 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 11:23:32,127 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:23:32,128 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:23:32,129 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:23:32,130 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:23:32,131 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:23:32,132 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:23:32,132 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:23:32,271 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:23:32,272 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:23:32,289 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:23:32,292 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:23:32,298 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:23:32,299 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:23:32,301 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:23:32,308 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:23:32,314 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:23:32,315 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:23:32,471 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:23:32,473 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:23:32,475 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:23:32,477 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:23:32,478 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:23:32,479 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:23:32,492 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:23:32,495 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:23:32,672 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:23:32,675 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:23:32,677 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:23:32,678 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:23:32,680 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:23:32,682 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:23:32,685 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:23:32,872 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:23:32,977 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:32,979 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:23:32,982 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:23:32,986 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:23:32,989 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:23:33,071 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:23:33,073 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:23:33,075 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:23:33,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:23:33,077 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:23:33,078 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:23:33,271 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:23:33,436 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:33,437 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:23:33,438 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:23:33,439 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:23:33,440 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:23:33,441 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:23:33,471 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:23:33,472 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:23:33,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:23:33,474 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:23:33,475 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:23:33,671 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:23:33,673 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:33,674 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:23:33,675 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:23:33,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:23:33,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:23:33,677 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:23:33,678 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:23:33,871 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:23:33,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:23:33,873 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:23:33,874 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:23:33,875 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:23:34,072 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:34,073 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:23:34,074 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:23:34,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:23:34,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:23:34,076 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:23:34,077 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:23:34,084 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:23:34,085 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:23:34,271 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:23:34,273 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:23:34,274 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:23:34,276 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:34,498 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:23:34,499 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:23:34,501 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:23:34,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:23:34,506 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:23:34,507 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:23:34,508 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:23:34,509 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:23:34,510 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:23:34,671 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:23:34,672 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:23:35,087 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:23:35,088 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:23:35,088 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:23:35,089 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:23:35,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:23:35,091 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:23:35,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:23:35,093 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:23:35,095 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:23:35,102 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:23:35,103 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:23:35,104 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:23:35,105 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:23:35,105 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:23:38,247 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:23:38,249 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:23:38,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:23:38,261 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:23:49,994 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:23:49,995 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:23:49,996 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:23:49,998 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:23:50,025 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:23:50,026 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:23:50,027 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:23:50,028 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:25:57,692 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:25:57,746 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:25:57,759 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:25:57,762 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-09-29 11:25:57,764 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-09-29 11:25:57,765 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:25:57,766 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:25:57,768 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:25:57,769 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:25:57,770 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 11:25:57,771 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:25:57,772 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:25:57,918 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 11:25:57,919 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:25:57,934 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:25:57,936 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:25:57,942 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:25:57,944 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:25:57,945 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:25:57,952 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:25:57,958 [Thread: 8       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:25:57,959 [Thread: 8       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:25:58,118 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:25:58,119 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:25:58,121 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:25:58,122 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:25:58,123 [Thread: 8       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:25:58,124 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:25:58,137 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:25:58,139 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:25:58,320 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:25:58,322 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:25:58,324 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:25:58,325 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:25:58,327 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:25:58,330 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:25:58,331 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:25:58,519 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:25:58,617 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:25:58,624 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:25:58,625 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:25:58,627 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:25:58,629 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:25:58,719 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:25:58,721 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:25:58,723 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:25:58,724 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:25:58,725 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:25:58,726 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:25:58,918 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:25:59,085 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:25:59,086 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:25:59,088 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:25:59,089 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:25:59,091 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:25:59,092 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:25:59,118 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:25:59,119 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:25:59,120 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:25:59,121 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:25:59,122 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:25:59,318 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:25:59,320 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:25:59,321 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:25:59,322 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:25:59,323 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:25:59,327 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:25:59,328 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:25:59,329 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:25:59,518 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:25:59,519 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:25:59,520 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:25:59,521 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:25:59,522 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:25:59,719 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:25:59,720 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:25:59,721 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:25:59,722 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:25:59,723 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:25:59,724 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:25:59,725 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:25:59,732 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:25:59,733 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:25:59,918 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:25:59,919 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:25:59,920 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:25:59,922 [Thread: 8       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:26:00,118 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:26:00,119 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:26:00,120 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:26:00,121 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:26:00,121 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:26:00,122 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:26:00,123 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:26:00,124 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:26:00,125 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:26:00,318 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:26:00,319 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:26:00,733 [Thread: 8       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:26:00,734 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:26:00,735 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:26:00,735 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:26:00,736 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:26:00,737 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:26:00,738 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:26:00,739 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:26:00,740 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:26:00,749 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:26:00,751 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:26:00,752 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:26:00,753 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:26:00,753 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:26:23,285 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:26:23,287 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:26:23,299 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:26:23,300 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:26:33,958 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:26:33,959 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:26:33,960 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:26:33,961 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:26:33,985 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:26:33,986 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:26:33,987 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:26:33,987 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:50:36,423 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:50:37,485 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:50:38,417 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:50:38,634 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 11:50:38,751 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 11:50:38,782 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:50:38,785 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:50:38,787 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:50:38,789 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:50:38,791 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:50:38,792 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:50:38,794 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:50:38,796 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 11:50:38,797 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:50:39,121 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:50:39,125 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:50:39,262 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:50:39,265 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:50:39,267 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:50:39,373 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:50:39,387 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:50:39,391 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:50:39,392 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:50:39,394 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:50:39,396 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:50:39,397 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:50:39,399 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:50:39,400 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:50:39,625 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:50:39,643 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:50:39,654 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:50:39,656 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:50:39,658 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:50:39,660 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:50:39,678 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:50:39,759 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:50:39,761 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:50:39,798 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:50:41,176 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:41,179 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:50:41,181 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:50:41,185 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:50:41,188 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:50:41,190 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:50:41,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:50:41,196 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:50:41,200 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:50:41,204 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:50:41,206 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:50:41,208 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:50:41,831 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:41,832 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:50:41,834 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:50:41,835 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:50:41,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:50:41,837 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:50:41,837 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:50:41,838 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:50:41,839 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:50:41,854 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:50:41,855 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:50:41,856 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:50:41,858 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:41,859 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:50:42,054 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:50:42,056 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:50:42,057 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:50:42,058 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:50:42,059 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:50:42,060 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:50:42,061 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:50:42,063 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:50:42,254 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:50:42,256 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:50:42,258 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:42,259 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:50:42,260 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:50:42,454 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:50:42,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:50:42,461 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:50:42,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:50:42,464 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:50:42,465 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:50:42,466 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:50:42,467 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:50:42,655 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:50:42,656 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:42,658 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:50:42,659 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:50:42,660 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:50:42,855 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:50:42,856 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:50:42,857 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:50:42,858 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:50:42,859 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:50:42,860 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:50:42,861 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:50:43,055 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:50:45,891 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:50:45,892 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:50:45,893 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:50:45,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:50:45,896 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:50:45,898 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:50:45,899 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:50:45,900 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:50:45,902 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:50:45,905 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:50:45,907 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:50:45,908 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:50:45,909 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:50:45,911 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:50:48,666 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:50:48,721 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:50:48,722 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:50:48,723 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:50:48,724 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 11:54:26,393 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 11:54:26,640 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 11:54:26,727 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 11:54:26,736 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 11:54:26,739 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 11:54:26,760 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 11:54:26,761 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 11:54:26,762 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 11:54:26,763 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 11:54:26,765 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 11:54:26,766 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:54:26,767 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 11:54:26,768 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 11:54:26,769 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 11:54:26,930 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 11:54:26,935 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 11:54:26,954 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 11:54:26,955 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 11:54:26,956 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 11:54:26,975 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 11:54:26,977 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 11:54:26,978 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 11:54:26,980 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 11:54:26,984 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 11:54:27,071 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 11:54:27,072 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 11:54:27,073 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 11:54:27,074 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 11:54:27,141 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:54:27,165 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 11:54:27,168 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 11:54:27,281 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 11:54:27,283 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 11:54:27,285 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 11:54:27,306 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:54:27,312 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 11:54:27,315 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 11:54:27,493 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 11:54:27,795 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:27,796 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 11:54:27,797 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 11:54:27,800 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 11:54:27,802 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 11:54:27,803 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 11:54:27,805 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:54:27,807 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:54:27,808 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:54:27,870 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 11:54:27,877 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 11:54:27,878 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 11:54:28,172 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:28,173 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 11:54:28,174 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 11:54:28,174 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 11:54:28,175 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 11:54:28,176 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 11:54:28,177 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:54:28,178 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:54:28,179 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:54:28,270 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 11:54:28,271 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 11:54:28,272 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 11:54:28,274 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:28,275 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 11:54:28,501 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 11:54:28,502 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 11:54:28,503 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 11:54:28,504 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 11:54:28,504 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:54:28,505 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:54:28,506 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 11:54:28,507 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 11:54:28,670 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 11:54:28,671 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 11:54:28,673 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:28,674 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 11:54:28,675 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 11:54:28,870 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 11:54:28,873 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 11:54:28,874 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 11:54:28,875 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 11:54:28,876 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 11:54:28,876 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 11:54:28,877 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 11:54:28,879 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 11:54:29,070 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 11:54:29,072 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:29,073 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 11:54:29,074 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 11:54:29,075 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 11:54:29,270 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 11:54:29,271 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 11:54:29,272 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 11:54:29,273 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 11:54:29,274 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:54:29,275 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 11:54:29,276 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 11:54:29,470 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 11:54:30,994 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 11:54:30,995 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 11:54:30,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 11:54:30,997 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 11:54:30,999 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 11:54:31,000 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 11:54:31,000 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:54:31,003 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:54:31,006 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 11:54:31,016 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 11:54:31,017 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 11:54:31,018 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 11:54:31,019 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 11:54:31,020 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 11:54:57,710 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:54:57,774 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:54:57,776 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:54:57,777 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:55:10,760 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:55:10,762 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:55:10,764 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:55:10,771 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:55:10,796 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:55:10,798 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:55:10,801 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:55:10,802 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 11:55:59,053 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 11:55:59,054 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 11:55:59,055 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 11:55:59,059 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 11:56:16,218 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 11:56:16,219 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 11:56:16,220 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 11:56:16,222 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 11:56:16,223 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 11:56:16,224 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 11:56:16,225 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 11:56:16,226 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:15:50,538 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 14:15:51,092 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 14:15:51,565 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 14:15:51,690 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 14:15:51,692 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 14:15:51,693 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 14:15:51,694 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 14:15:51,696 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 14:15:51,697 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 14:15:51,698 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 14:15:51,699 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 14:15:51,700 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 14:15:51,701 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 14:15:51,702 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 14:15:51,917 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 14:15:51,921 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 14:15:51,927 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 14:15:51,933 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 14:15:51,935 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 14:15:51,941 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 14:15:51,943 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 14:15:51,944 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 14:15:51,945 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 14:15:51,946 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 14:15:51,975 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 14:15:51,976 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 14:15:51,977 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 14:15:51,978 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 14:15:51,997 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 14:15:51,999 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 14:15:52,002 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 14:15:52,176 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 14:15:52,178 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 14:15:52,179 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 14:15:52,181 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 14:15:52,184 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 14:15:52,186 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 14:15:52,375 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 14:15:52,997 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:52,998 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 14:15:53,000 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 14:15:53,002 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 14:15:53,005 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 14:15:53,008 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 14:15:53,010 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 14:15:53,013 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 14:15:53,014 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:15:53,016 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 14:15:53,017 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 14:15:53,017 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 14:15:53,271 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:53,272 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 14:15:53,273 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 14:15:53,274 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 14:15:53,275 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 14:15:53,276 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 14:15:53,277 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:15:53,278 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:15:53,280 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:15:53,415 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 14:15:53,418 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 14:15:53,420 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 14:15:53,424 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:53,426 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 14:15:53,614 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 14:15:53,616 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 14:15:53,617 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 14:15:53,619 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 14:15:53,620 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:15:53,622 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:15:53,624 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 14:15:53,625 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 14:15:53,814 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 14:15:53,815 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 14:15:53,817 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:53,818 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 14:15:53,819 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 14:15:54,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 14:15:54,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 14:15:54,016 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 14:15:54,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 14:15:54,019 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 14:15:54,020 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 14:15:54,021 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 14:15:54,022 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 14:15:54,214 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 14:15:54,216 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:54,217 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 14:15:54,218 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 14:15:54,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 14:15:54,414 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 14:15:54,415 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 14:15:54,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 14:15:54,417 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 14:15:54,419 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:15:54,420 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 14:15:54,421 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 14:15:54,614 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 14:15:56,633 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:15:56,638 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 14:15:56,640 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 14:15:56,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 14:15:56,643 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 14:15:56,644 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 14:15:56,646 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:15:56,647 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:15:56,650 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 14:15:56,667 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 14:15:56,668 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 14:15:56,669 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 14:15:56,670 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 14:15:56,671 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 14:16:05,070 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:16:05,128 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 14:16:05,141 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:16:05,143 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:16:11,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:16:11,537 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 14:16:11,538 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:16:11,539 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:16:11,565 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:16:11,566 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 14:16:11,567 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:16:11,568 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:16:34,915 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:16:34,916 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 14:16:34,917 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:16:34,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:16:38,651 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:16:38,652 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 14:16:38,654 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:16:38,659 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:16:44,658 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:16:44,659 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 14:16:44,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:16:44,661 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:16:44,662 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:16:44,664 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 14:16:44,665 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:16:44,666 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:16:56,949 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:16:56,951 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 14:16:56,951 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:16:56,952 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:17:04,926 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:17:04,927 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 14:17:04,928 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:17:04,929 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:17:04,929 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:17:04,930 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 14:17:04,931 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:17:04,932 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:18:30,242 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:18:30,243 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 14:18:30,244 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:18:30,246 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:18:37,661 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:18:37,667 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 14:18:37,670 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:18:37,671 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:18:37,673 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:18:37,675 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 14:18:37,675 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:18:37,676 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:19:45,922 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 14:19:45,989 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 14:19:45,990 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 14:19:45,991 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 14:19:45,992 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 14:28:10,306 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 14:28:11,083 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 14:28:11,451 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 14:28:11,534 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 14:28:11,536 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 14:28:11,538 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 14:28:11,539 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 14:28:11,540 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 14:28:11,541 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 14:28:11,542 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 14:28:11,544 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 14:28:11,545 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 14:28:11,546 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 14:28:11,547 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 14:28:11,744 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 14:28:11,747 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 14:28:11,753 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 14:28:11,754 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 14:28:11,755 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 14:28:11,760 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 14:28:11,762 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 14:28:11,765 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 14:28:11,766 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 14:28:11,767 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 14:28:11,856 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 14:28:11,858 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 14:28:11,859 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 14:28:11,860 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 14:28:11,915 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 14:28:11,920 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 14:28:11,923 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 14:28:12,055 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 14:28:12,057 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 14:28:12,058 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 14:28:12,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 14:28:12,064 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 14:28:12,066 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 14:28:12,254 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 14:28:13,175 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:13,177 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 14:28:13,179 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 14:28:13,182 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 14:28:13,184 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 14:28:13,185 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 14:28:13,187 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 14:28:13,189 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 14:28:13,190 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 14:28:13,193 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 14:28:13,199 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 14:28:13,201 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 14:28:13,400 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:13,401 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 14:28:13,402 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 14:28:13,403 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 14:28:13,404 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 14:28:13,405 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 14:28:13,406 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 14:28:13,406 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 14:28:13,407 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 14:28:13,594 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 14:28:13,597 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 14:28:13,598 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 14:28:13,601 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:13,604 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 14:28:13,793 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 14:28:13,795 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 14:28:13,796 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 14:28:13,798 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 14:28:13,799 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 14:28:13,799 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 14:28:13,800 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 14:28:13,801 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 14:28:13,993 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 14:28:13,998 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 14:28:14,001 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:14,011 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 14:28:14,012 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 14:28:14,193 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 14:28:14,195 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 14:28:14,196 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 14:28:14,197 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 14:28:14,198 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 14:28:14,199 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 14:28:14,200 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 14:28:14,201 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 14:28:14,393 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 14:28:14,396 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:14,397 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 14:28:14,398 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 14:28:14,399 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 14:28:14,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 14:28:14,595 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 14:28:14,596 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 14:28:14,598 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 14:28:14,599 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 14:28:14,600 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 14:28:14,601 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 14:28:14,793 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 14:28:17,316 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 14:28:17,317 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 14:28:17,318 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 14:28:17,319 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 14:28:17,321 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 14:28:17,322 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 14:28:17,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 14:28:17,324 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 14:28:17,326 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 14:28:17,328 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 14:28:17,330 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 14:28:17,333 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 14:28:17,335 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 14:28:17,336 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:43:51,458 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 15:43:51,557 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 15:43:51,655 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 15:43:51,679 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 15:43:51,682 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 15:43:51,683 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 15:43:51,684 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 15:43:51,688 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 15:43:51,689 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 15:43:51,690 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:43:51,691 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:43:51,692 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 15:43:51,693 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:43:51,694 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:43:51,746 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 15:43:51,750 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 15:43:51,755 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 15:43:51,757 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 15:43:51,758 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 15:43:51,891 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 15:43:51,893 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 15:43:51,893 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 15:43:51,894 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 15:43:51,895 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 15:43:51,897 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 15:43:51,898 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 15:43:51,899 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 15:43:51,899 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 15:43:52,101 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:43:52,105 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:43:52,107 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 15:43:52,111 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 15:43:52,113 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 15:43:52,114 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 15:43:52,116 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:43:52,289 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 15:43:52,291 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 15:43:52,293 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 15:43:52,533 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:52,535 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 15:43:52,536 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 15:43:52,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 15:43:52,541 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 15:43:52,542 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 15:43:52,543 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:43:52,546 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:43:52,547 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:43:52,687 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 15:43:52,688 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 15:43:52,689 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 15:43:52,869 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:52,870 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 15:43:52,887 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 15:43:52,888 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 15:43:52,889 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 15:43:52,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 15:43:52,890 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:43:52,891 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:43:52,891 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:43:52,892 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 15:43:53,087 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 15:43:53,088 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 15:43:53,090 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:53,090 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 15:43:53,091 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 15:43:53,287 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 15:43:53,288 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 15:43:53,294 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 15:43:53,295 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:43:53,296 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:43:53,297 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 15:43:53,297 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 15:43:53,298 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 15:43:53,487 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 15:43:53,489 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:53,490 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 15:43:53,490 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 15:43:53,491 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 15:43:53,687 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 15:43:53,689 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 15:43:53,690 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 15:43:53,690 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 15:43:53,691 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 15:43:53,692 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 15:43:53,693 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 15:43:53,887 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 15:43:53,889 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:53,890 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 15:43:53,890 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 15:43:53,891 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 15:43:53,892 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 15:43:54,087 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 15:43:54,088 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 15:43:54,089 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 15:43:54,090 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:43:54,090 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 15:43:54,091 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 15:43:54,287 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 15:43:55,057 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:43:55,058 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 15:43:55,059 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 15:43:55,060 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 15:43:55,060 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 15:43:55,061 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 15:43:55,062 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:43:55,063 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:43:55,065 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 15:43:55,078 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 15:43:55,079 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:43:55,080 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:43:55,081 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:43:55,081 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:43:58,281 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:43:58,282 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:43:58,283 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:43:58,284 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:43:58,343 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 15:44:00,459 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:44:00,460 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:44:00,461 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:44:00,461 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:44:00,487 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:01,387 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:02,407 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:02,441 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:03,309 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 15:44:03,342 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:44:03,343 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 15:44:03,344 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:44:03,345 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:44:47,797 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:44:47,812 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:44:47,812 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:44:47,828 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:44:47,828 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:44:47,828 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:44:47,828 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:44:47,828 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:44:49,107 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:49,107 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:49,887 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:50,901 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:50,901 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:51,697 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:52,711 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:52,711 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:52,851 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:53,865 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:53,865 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:54,021 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:54,692 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:44:54,692 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 15:44:54,692 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:44:54,692 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:44:55,035 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:55,035 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:55,191 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:56,205 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:56,205 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:56,361 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:57,375 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:57,375 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:58,140 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:44:59,154 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:44:59,154 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:44:59,965 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:00,979 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:00,979 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:01,774 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:02,788 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:02,788 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:03,584 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:04,598 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:04,598 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:04,738 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:05,752 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:05,752 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:05,908 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:06,922 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:06,922 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:07,094 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:08,108 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:08,108 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:08,264 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:09,278 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:09,278 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:10,027 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:11,041 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:11,041 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:12,117 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:13,131 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:13,131 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:14,036 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:15,050 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:15,050 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:16,126 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:45:16,126 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:45:17,640 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:17,640 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:18,778 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:19,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:19,792 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:19,933 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:20,947 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:20,947 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:21,103 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:22,117 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:22,117 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:22,273 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:23,287 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:23,287 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:23,443 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:24,457 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:24,457 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:24,972 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:25,986 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:25,986 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:26,906 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:27,920 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:27,920 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:28,919 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:29,933 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:29,933 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:30,728 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:31,742 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:31,742 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:31,883 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:32,897 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:32,897 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:33,053 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:34,067 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:34,067 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:34,223 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:35,237 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:35,237 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:35,393 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:36,407 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:36,407 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:37,155 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:38,169 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:38,169 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:38,981 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:39,995 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:39,995 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:40,790 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:41,804 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:41,804 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:42,600 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:43,614 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:43,614 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:43,754 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:44,768 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:44,768 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:44,924 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:45,938 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:45,938 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:46,094 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:47,108 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:47,108 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:47,264 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:48,278 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:48,278 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:48,637 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:49,651 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:49,651 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:50,649 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:51,663 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:51,663 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:52,553 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:53,567 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:53,567 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:54,971 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:55,985 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:55,985 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:56,125 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:57,139 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:57,139 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:57,295 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:58,309 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:58,309 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:58,481 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:45:59,495 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:45:59,495 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:45:59,651 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:00,665 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:00,665 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:01,023 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:02,037 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:02,037 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:03,036 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:04,050 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:04,050 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:04,939 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:05,953 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:05,953 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:07,435 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:08,449 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:08,449 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:08,589 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:09,603 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:09,603 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:09,759 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:10,773 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:10,773 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:10,929 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:11,943 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:11,943 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:12,099 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:13,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:13,113 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:13,862 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:14,876 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:14,876 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:15,687 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:16,701 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:16,701 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:17,497 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:18,511 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:18,511 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:19,307 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:20,321 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:20,321 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:20,461 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:21,475 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:21,475 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:21,631 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:22,645 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:22,645 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:22,801 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:23,815 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:23,815 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:23,971 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:24,985 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:24,985 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:25,344 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:26,358 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:26,358 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:27,169 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:28,183 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:28,183 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:29,369 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:30,383 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:30,383 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:31,443 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:32,457 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:32,457 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:32,598 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:33,612 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:33,612 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:33,768 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:34,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:34,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:34,938 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:35,952 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:35,952 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:36,108 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:37,122 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:37,122 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:37,637 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:38,651 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:38,651 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:39,555 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:40,569 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:40,569 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:41,318 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:42,332 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:42,332 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:43,424 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:44,438 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:44,438 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:44,579 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:45,593 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:45,593 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:45,749 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:46,763 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:46,763 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:46,919 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:47,933 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:47,933 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:48,089 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:49,103 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:49,103 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:49,602 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:50,616 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:50,616 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:51,333 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:52,347 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:52,347 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:53,096 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:54,110 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:54,110 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:55,202 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:56,216 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:56,216 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:56,357 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:57,371 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:57,371 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:57,527 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:58,541 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:58,541 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:58,697 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:46:59,711 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:46:59,711 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:46:59,867 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:00,881 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:00,881 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:01,395 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:02,409 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:02,409 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:03,299 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:04,313 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:04,313 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:05,046 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:06,060 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:06,060 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:07,152 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:08,166 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:08,166 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:08,306 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:09,320 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:09,320 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:09,476 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:10,490 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:10,490 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:10,646 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:11,660 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:11,660 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:11,816 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:12,830 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:12,830 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:13,595 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:14,609 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:14,609 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:15,420 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:16,434 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:16,434 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:17,230 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:18,244 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:18,244 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:19,039 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:20,053 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:20,053 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:20,209 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:21,223 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:21,223 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:21,379 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:22,393 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:22,393 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:22,565 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:23,579 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:23,579 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:23,735 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:24,749 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:24,749 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:25,264 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:26,278 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:26,278 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:27,167 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:47:27,167 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:47:28,493 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:28,493 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:29,491 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 15:47:29,491 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:47:29,491 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:47:29,491 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:47:29,491 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:47:30,505 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:30,505 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:32,174 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:33,188 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:33,188 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:33,984 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:34,998 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:34,998 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:35,794 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:36,808 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:36,808 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:36,948 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:37,962 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:37,962 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:38,118 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:39,132 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:39,132 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:39,304 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:40,318 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:40,318 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:40,474 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:41,488 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:41,488 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:42,221 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:43,235 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:43,235 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:44,046 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:45,060 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:45,060 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:45,856 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:46,870 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:46,870 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:47,681 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:48,695 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:48,695 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:48,835 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:49,865 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:49,865 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:50,021 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:51,035 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:51,035 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:51,206 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:52,220 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:52,220 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:52,376 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:53,390 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:53,390 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:54,155 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:55,169 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:55,169 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:55,980 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:56,994 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:56,994 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:47:57,914 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:47:58,928 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:47:58,928 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:00,161 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:01,175 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:01,175 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:01,315 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:02,329 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:02,329 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:02,485 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:03,499 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:03,499 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:03,671 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:04,685 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:04,685 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:04,841 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:05,855 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:05,855 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:06,385 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:07,399 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:07,399 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:08,242 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:09,256 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:09,256 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:09,973 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:10,987 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:10,987 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:12,157 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:13,171 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:13,171 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:13,312 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:14,326 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:14,326 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:14,482 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:15,496 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:15,496 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:15,652 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:16,666 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:16,666 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:16,822 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:17,836 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:17,836 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:18,350 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:19,364 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:19,364 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:20,191 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:21,205 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:21,205 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:21,954 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:22,968 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:22,968 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:24,107 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:25,121 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:25,121 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:25,261 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:26,275 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:26,275 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:26,431 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:27,445 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:27,445 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:27,601 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:28,615 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:28,615 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:28,771 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:29,785 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:29,785 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:30,300 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:31,314 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:31,314 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:32,297 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:33,311 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:33,311 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:34,340 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:35,354 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:35,354 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:36,992 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:38,006 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:38,006 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:38,162 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:39,176 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:39,176 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:39,332 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:40,346 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:40,346 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:40,518 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:41,532 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:41,532 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:41,688 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:42,702 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:42,702 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:43,170 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:44,184 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:44,184 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:44,886 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:45,900 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:45,900 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:46,493 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:47,507 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:47,507 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:48,302 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:49,316 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:49,316 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:49,472 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:50,486 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:50,486 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:50,642 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:51,656 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:51,656 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:51,828 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:52,842 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:52,842 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:53,014 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:54,028 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:54,028 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:54,761 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:55,775 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:55,775 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:56,586 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:57,600 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:57,600 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:48:58,474 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:48:59,488 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:48:59,488 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:00,533 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:49:00,533 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:49:01,781 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:01,781 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:02,374 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:03,388 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:03,388 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:03,528 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:04,542 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:04,542 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:04,698 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:05,712 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:05,712 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:05,868 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:06,882 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:06,882 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:07,038 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:08,052 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:08,052 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:08,567 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:09,581 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:09,581 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:10,642 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 15:49:10,642 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:49:10,642 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:49:10,642 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:49:10,642 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:49:11,656 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:11,656 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:12,529 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:13,543 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:13,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:14,386 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 15:49:14,386 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:49:14,386 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:49:14,386 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:49:14,386 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:49:15,400 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:15,400 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:16,180 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:17,194 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:17,194 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:18,005 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:19,019 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:19,019 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:19,159 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:20,173 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:20,173 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:20,329 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:21,343 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:21,343 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:21,515 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:22,529 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:22,529 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:22,685 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:23,699 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:23,699 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:24,463 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:25,477 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:25,477 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:26,304 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:49:26,304 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:49:27,568 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:27,568 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:28,644 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:29,658 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:29,658 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:30,454 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:31,468 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:31,468 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:49:32,263 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:49:32,653 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:49:32,669 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:49:32,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:49:32,669 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:49:32,669 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 15:49:33,277 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:49:33,277 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 15:50:01,127 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:50:01,127 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:50:01,127 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:50:01,127 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:50:01,127 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 15:51:25,763 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 15:51:25,826 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:51:25,841 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:51:25,857 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 15:51:25,997 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:51:25,997 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:51:26,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 15:51:26,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 15:51:26,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 15:51:26,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 15:51:26,029 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 15:51:26,044 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 15:51:26,044 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 15:51:26,044 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 15:51:26,200 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 15:51:26,216 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:51:26,231 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 15:51:26,403 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 15:51:26,606 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 15:51:26,887 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:26,887 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 15:51:26,887 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 15:51:26,902 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 15:51:26,902 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 15:51:26,902 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 15:51:26,902 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:51:26,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:51:26,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:51:27,011 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 15:51:27,011 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 15:51:27,011 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:51:27,323 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:51:27,417 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 15:51:27,417 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 15:51:27,417 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 15:51:27,417 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:27,417 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 15:51:27,620 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 15:51:27,823 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 15:51:27,823 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 15:51:27,823 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:27,823 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 15:51:27,823 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 15:51:28,025 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 15:51:28,228 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 15:51:28,228 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:28,228 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 15:51:28,228 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 15:51:28,228 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 15:51:28,431 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 15:51:28,634 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:51:29,227 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 15:51:29,258 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 15:51:29,258 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:51:29,258 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:51:29,258 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:51:29,258 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:51:31,660 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:51:31,660 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 15:51:31,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:51:31,660 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:51:41,551 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:51:41,551 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:51:41,551 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:51:41,551 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:51:41,551 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 15:51:44,405 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:51:44,405 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:51:44,405 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:51:44,405 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:51:44,421 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:44,561 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:45,575 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:45,575 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:45,731 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:46,745 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:46,745 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:46,917 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:47,931 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:47,931 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:48,087 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:49,101 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:49,101 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:49,865 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:50,879 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:50,879 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:51,691 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:52,705 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:52,705 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:53,656 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:54,670 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:54,670 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:55,482 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:56,496 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:56,496 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:56,636 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:57,650 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:57,650 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:57,806 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:58,820 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:58,820 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:51:58,976 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:51:59,990 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:51:59,990 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:00,130 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:01,144 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:01,144 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:01,675 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:02,689 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:02,689 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:03,578 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:04,592 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:04,592 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:05,528 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:06,542 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:06,542 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:07,462 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:08,476 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:08,476 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:08,617 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:09,631 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:09,631 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:09,787 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:10,801 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:10,801 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:10,972 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:11,986 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:11,986 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:12,142 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:13,156 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:13,156 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:13,687 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:14,701 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:14,701 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:15,559 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:16,573 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:16,573 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:17,290 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:18,304 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:18,304 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:19,350 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:20,364 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:20,364 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:20,504 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:21,518 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:21,518 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:21,674 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:22,688 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:22,688 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:22,844 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:23,858 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:23,858 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:24,014 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:25,028 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:25,028 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:25,496 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:26,510 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:26,510 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:27,524 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:52:27,524 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:52:28,756 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:28,756 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:29,583 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 15:52:29,583 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:52:29,583 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:52:29,583 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:52:29,583 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:52:30,597 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:30,597 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:31,377 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:32,391 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:32,391 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:33,187 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:34,201 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:34,201 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:34,996 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:36,010 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:36,010 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:36,166 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:37,180 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:37,180 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:37,336 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:38,350 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:38,350 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:38,522 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:39,536 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:39,536 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:39,692 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:40,706 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:40,706 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:41,221 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:42,235 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:42,235 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:43,249 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:52:43,249 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:52:44,856 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:44,856 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:46,026 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:47,040 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:47,040 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:47,835 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:48,849 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:48,849 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:49,645 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:50,659 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:50,659 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:50,815 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:51,829 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:51,829 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:51,985 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:52,999 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:52,999 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:53,170 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:54,184 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:54,184 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:54,340 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:55,354 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:55,354 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:56,119 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:57,133 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:57,133 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:52:58,350 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:52:59,364 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:52:59,364 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:00,206 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:01,220 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:01,220 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:02,328 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:03,342 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:03,342 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:03,482 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:04,496 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:04,496 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:04,668 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:05,682 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:05,682 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:05,853 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:06,867 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:06,867 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:07,023 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:08,037 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:08,037 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:08,552 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:09,566 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:09,566 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:10,268 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:11,282 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:11,282 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:12,109 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:13,123 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:13,123 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:14,262 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:15,276 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:15,276 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:15,416 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:16,430 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:16,430 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:16,586 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:17,600 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:17,600 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:17,772 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:18,786 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:18,786 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:18,942 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:19,956 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:19,956 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:20,470 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:21,484 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:21,484 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:22,202 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:23,216 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:23,216 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:24,090 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:25,104 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:25,104 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:26,274 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:27,288 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:27,288 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:27,428 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:28,442 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:28,442 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:28,598 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:29,612 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:29,612 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:29,768 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:30,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:30,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:30,938 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:31,952 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:31,952 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:32,451 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:33,465 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:33,465 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:34,183 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:35,197 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:35,197 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:35,992 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:37,006 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:37,006 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:37,802 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:38,816 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:38,816 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:53:38,956 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:53:39,736 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:53:39,736 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:53:39,736 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:53:39,736 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:53:39,736 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 15:53:39,970 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:53:39,970 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 15:53:41,296 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:53:41,296 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:53:41,296 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:53:41,296 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:53:41,296 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 15:55:57,187 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 15:55:57,249 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:55:57,265 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 15:55:57,421 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 15:55:57,421 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 15:55:57,437 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 15:55:57,437 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 15:55:57,437 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 15:55:57,452 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 15:55:57,452 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 15:55:57,452 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 15:55:57,452 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 15:55:57,452 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 15:55:57,624 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 15:55:57,639 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:55:57,639 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 15:55:57,827 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 15:55:58,029 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 15:55:58,107 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:55:58,107 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 15:55:58,107 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 15:55:58,107 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 15:55:58,107 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 15:55:58,232 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 15:55:58,435 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 15:55:58,653 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 15:55:58,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:55:58,669 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:55:58,669 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:55:58,856 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 15:55:58,856 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 15:55:58,856 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 15:55:58,856 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:55:58,856 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 15:55:59,059 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 15:55:59,262 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 15:55:59,262 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 15:55:59,262 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:55:59,262 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 15:55:59,262 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 15:55:59,465 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 15:55:59,667 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 15:55:59,667 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:55:59,667 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 15:55:59,667 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 15:55:59,667 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 15:55:59,870 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 15:56:00,073 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 15:56:00,744 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 15:56:00,744 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 15:56:00,744 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 15:56:00,744 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 15:56:00,744 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 15:56:00,759 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:56:00,759 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:56:00,962 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:56:04,020 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 15:56:04,020 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 15:56:04,020 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 15:56:04,020 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 15:56:15,018 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:56:15,018 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:56:15,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:56:15,018 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:56:15,033 [Thread: 14      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 15:56:16,188 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:56:16,188 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:56:16,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:56:16,188 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:56:16,188 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:17,280 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:18,294 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:18,294 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:19,089 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:20,103 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:20,103 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:20,899 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:21,913 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:21,913 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:22,069 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:23,083 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:23,083 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:23,239 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:24,253 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:24,253 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:24,425 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:25,439 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:25,439 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:25,595 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:26,609 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:26,609 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:27,373 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:28,387 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:28,387 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:29,292 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:30,306 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:30,306 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:31,491 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:32,505 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:32,505 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:33,675 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:34,689 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:34,689 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:34,830 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:35,844 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:35,844 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:36,000 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:37,014 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:37,014 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:37,185 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:38,199 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:38,199 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:38,355 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:39,369 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:39,369 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:39,884 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:40,898 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:40,898 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:41,912 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 15:56:41,912 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:56:41,912 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:56:41,928 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:56:43,503 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:43,503 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:44,549 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:45,563 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:45,563 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:46,358 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:47,372 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:47,372 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:48,183 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:49,197 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:49,197 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:49,338 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:50,352 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:50,352 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:50,508 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:51,522 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:51,522 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:51,693 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:52,707 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:52,707 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:52,863 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:53,877 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:53,877 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:54,642 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:55,656 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:55,656 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:56,467 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:57,481 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:57,481 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:56:58,277 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:56:59,291 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:56:59,291 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:00,102 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:01,116 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:01,116 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:01,256 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:02,270 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:02,270 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:02,426 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:03,440 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:03,440 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:03,612 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:04,626 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:04,626 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:04,782 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:05,796 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:05,796 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:06,560 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:07,574 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:07,574 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:08,604 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:57:08,604 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:57:09,805 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:09,805 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:10,788 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:11,802 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:11,802 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:12,598 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:13,612 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:13,612 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:14,407 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:15,421 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:15,421 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:15,562 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:16,576 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:16,576 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:16,732 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:17,746 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:17,746 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:17,902 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:18,916 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:18,916 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:19,072 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:20,086 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:20,086 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:20,678 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:21,692 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:21,692 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:22,535 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 15:57:22,535 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 15:57:23,736 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:23,736 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:25,109 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:26,123 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 15:57:26,123 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 15:57:26,684 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:57:26,684 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:57:26,684 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:57:26,684 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:57:26,684 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 15:57:26,918 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 15:57:26,918 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 15:57:28,416 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 15:57:28,416 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 15:57:28,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 15:57:28,416 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 15:57:28,432 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:00:45,939 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:00:45,986 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:00:46,002 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:00:46,002 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:00:46,017 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:00:46,173 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 16:00:46,173 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:00:46,189 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:00:46,189 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:00:46,205 [Thread: 8       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:00:46,376 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:00:46,392 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:00:46,392 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:00:46,579 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:00:46,595 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:00:46,782 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:00:46,891 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:46,891 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:00:46,891 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:00:46,907 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:00:46,907 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:00:46,985 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:00:47,187 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:00:47,328 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:00:47,390 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:00:47,390 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:00:47,390 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:00:47,390 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:00:47,390 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:00:47,593 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:00:47,796 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:00:47,796 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:00:47,796 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:00:47,796 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:00:47,796 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:00:47,999 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:00:48,201 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:00:48,201 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:00:48,201 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:00:48,201 [Thread: 8       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:00:48,404 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:00:48,607 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:00:48,607 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:00:49,091 [Thread: 8       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:00:49,091 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:00:49,106 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:00:49,106 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:00:49,309 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:00:49,309 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:00:49,309 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:00:49,309 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:00:51,524 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:00:51,524 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 16:00:51,524 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:00:51,524 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:01:00,479 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:01:00,479 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:01:00,479 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:01:00,479 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:01:00,479 [Thread: 13      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:01:01,680 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:01:01,680 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:01:01,680 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:01:01,695 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:01:01,695 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:02,585 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:03,599 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:03,599 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:04,394 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:05,408 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:05,408 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:06,453 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:07,467 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:07,467 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:07,608 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:08,622 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:08,622 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:08,778 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:09,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:09,792 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:09,963 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:10,977 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:10,977 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:11,133 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:12,147 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:12,147 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:12,678 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:13,692 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:13,692 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:14,550 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:15,564 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:15,564 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:16,453 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:17,467 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:17,467 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:18,419 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:19,433 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:19,433 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:19,573 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:20,587 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:20,587 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:20,743 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:21,757 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:21,757 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:21,913 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:22,927 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:22,927 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:23,083 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:24,097 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:24,097 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:24,690 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:25,704 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:25,704 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:26,453 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:27,467 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:27,467 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:28,200 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:29,214 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:29,214 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:30,228 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:31,242 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:31,242 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:31,382 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:32,396 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:32,396 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:32,552 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:33,566 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:33,566 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:33,722 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:34,736 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:34,736 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:34,892 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:35,906 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:35,906 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:36,515 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:37,529 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:37,529 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:38,480 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:39,494 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:39,494 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:40,305 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:41,319 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:41,319 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:42,427 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:43,441 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:43,441 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:43,581 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:44,595 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:44,595 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:44,751 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:45,765 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:45,765 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:45,921 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:46,935 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:46,935 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:47,091 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:48,105 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:48,105 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:48,870 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:49,884 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:49,884 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:50,695 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:51,709 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:51,709 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:52,785 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:01:52,785 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:01:54,174 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:54,174 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:54,954 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:55,968 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:55,968 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:56,763 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:57,777 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:57,777 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:57,918 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:01:58,932 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:01:58,932 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:01:59,088 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:00,102 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:00,102 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:00,273 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:01,287 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:01,287 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:01,443 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:02,457 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:02,457 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:02,972 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:03,986 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:03,986 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:04,766 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:05,780 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:05,780 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:06,529 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:07,543 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:07,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:08,744 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:09,758 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:09,758 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:09,914 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:10,928 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:10,928 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:11,084 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:12,098 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:12,098 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:12,270 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:13,284 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:13,284 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:13,440 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:14,454 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:14,454 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:14,984 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:15,998 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:15,998 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:16,997 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:18,011 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:18,011 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:18,947 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:19,961 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:19,961 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:21,146 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:22,160 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:22,160 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:22,301 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:23,315 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:23,315 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:23,486 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:24,500 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:24,500 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:24,672 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:25,686 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:25,686 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:25,858 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:26,872 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:26,872 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:27,386 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:28,400 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:28,400 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:29,134 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:30,148 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:30,148 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:31,099 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:32,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:32,113 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:33,096 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:34,110 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:34,110 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:34,250 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:35,264 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:35,264 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:35,420 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:36,434 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:36,434 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:36,590 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:37,604 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:37,604 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:37,760 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:38,774 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:38,774 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:39,289 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:40,303 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:40,303 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:41,099 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:42,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:42,113 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:42,862 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:43,876 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:43,876 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:44,624 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:45,638 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:45,638 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:45,779 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:46,793 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:46,793 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:46,949 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:47,963 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:47,963 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:48,119 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:49,133 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:49,133 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:49,289 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:50,303 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:50,303 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:50,771 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:51,785 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:51,785 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:52,752 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:02:52,752 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:02:54,218 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:54,218 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:55,201 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:56,215 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:56,215 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:57,011 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:58,025 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:58,025 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:58,836 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:02:59,850 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:02:59,850 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:02:59,990 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:01,004 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:01,004 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:01,160 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:02,174 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:02,174 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:02,346 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:03,360 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:03,360 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:03,516 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:04,530 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:04,530 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:05,294 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:06,308 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:06,308 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:07,120 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:08,134 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:08,134 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:09,132 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:10,146 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:10,146 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:11,566 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:12,580 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:12,580 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:12,720 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:13,734 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:13,734 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:13,890 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:14,904 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:14,904 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:15,076 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:16,090 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:16,090 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:16,246 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:17,260 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:17,260 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:17,868 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:18,882 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:18,882 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:19,849 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:20,863 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:20,863 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:21,659 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:22,673 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:22,673 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:23,468 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:24,482 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:24,482 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:24,638 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:25,652 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:25,652 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:25,808 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:26,822 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:26,822 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:26,994 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:28,008 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:28,008 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:28,164 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:29,178 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:29,178 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:29,818 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:30,832 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:30,832 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:31,768 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:32,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:32,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:33,811 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:34,825 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:34,825 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:35,824 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:03:55,994 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:03:57,196 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:57,196 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:57,976 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:03:58,990 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:03:58,990 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:03:59,146 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:00,160 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:00,160 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:00,316 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:01,330 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:01,330 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:01,501 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:02,515 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:02,515 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:02,671 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:03,685 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:03,685 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:04,450 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:05,464 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:05,464 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:06,275 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:07,289 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:07,289 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:08,084 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:09,098 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:09,098 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:10,050 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:04:30,751 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:04:31,999 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:31,999 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:32,779 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:33,793 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:33,793 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:33,934 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:34,948 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:34,948 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:04:35,104 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:04:35,572 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:04:35,572 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:04:35,572 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:04:35,572 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:04:35,572 [Thread: 8       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:04:36,118 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:04:36,118 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:15:36,046 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:15:36,046 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:15:36,046 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:15:36,046 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:15:36,061 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:36,233 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:37,247 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:37,247 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:37,403 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:38,417 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:38,417 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:39,181 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:40,195 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:40,195 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:41,085 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:42,099 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:42,099 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:42,847 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:43,861 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:43,861 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:44,985 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:45,999 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:45,999 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:46,155 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:47,169 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:47,169 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:47,325 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:48,339 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:48,339 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:48,510 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:49,524 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:49,524 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:49,680 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:50,694 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:50,694 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:51,209 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:15:52,223 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:15:52,223 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:15:53,315 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:16:05,701 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:16:06,887 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:06,887 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:07,776 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:08,790 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:08,790 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:09,586 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:10,600 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:10,600 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:11,395 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:12,409 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:12,409 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:12,550 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:13,564 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:13,564 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:13,720 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:14,734 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:14,734 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:14,890 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:15,904 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:15,904 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:16,060 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:17,074 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:17,074 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:17,667 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:18,681 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:18,681 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:19,523 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:20,537 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:20,537 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:21,286 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:22,300 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:22,300 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:23,158 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:24,172 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:24,172 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:24,312 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:25,326 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:25,326 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:25,482 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:26,496 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:26,496 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:26,668 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:27,682 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:27,682 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:27,838 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:28,852 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:28,852 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:29,460 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:30,474 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:30,474 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:31,285 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:32,299 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:32,299 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:33,173 [Thread: VCR Read thread] [DEBUG] -- Received [33E7F01311]
2020-09-29 16:16:33,173 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:16:33,173 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:16:33,173 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:16:33,173 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:16:34,187 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:34,187 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:34,920 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:35,934 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:35,934 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:36,699 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:37,713 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:37,713 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:37,853 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:38,867 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:38,867 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:39,023 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:40,037 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:40,037 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:40,209 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:41,223 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:41,223 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:41,379 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:42,393 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:42,393 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:43,157 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:44,171 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:44,171 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:44,920 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:45,934 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:45,934 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:46,698 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:47,712 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:47,712 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:48,648 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:49,662 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:49,662 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:49,803 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:50,817 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:50,817 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:50,973 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:51,987 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:51,987 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:52,158 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:53,172 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:53,172 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:53,328 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:54,342 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:54,342 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:55,107 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:56,121 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:56,121 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:56,932 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:57,946 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:57,946 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:16:58,975 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:16:59,989 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:16:59,989 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:17:01,035 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:17:33,124 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:17:34,387 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:17:34,387 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:17:35,168 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:17:36,182 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:17:36,182 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:17:36,338 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:17:37,352 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:17:37,352 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:17:37,508 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:17:37,788 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:17:37,788 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:17:37,788 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:17:37,788 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:17:37,788 [Thread: 8       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:17:38,522 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:17:38,522 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:17:38,990 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:17:38,990 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:17:38,990 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:17:39,005 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:17:39,005 [Thread: 8       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:20:35,499 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:20:35,561 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:20:35,577 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:20:35,577 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:20:35,577 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:20:35,577 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:20:35,577 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:20:35,593 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:20:35,593 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:20:35,593 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:20:35,593 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:20:35,593 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:20:35,733 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:20:35,733 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:20:35,749 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:20:35,749 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:20:35,764 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:20:35,764 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:20:35,764 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:20:35,811 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:20:35,811 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:20:35,811 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:20:35,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:20:35,951 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:20:35,951 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:20:36,139 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:20:36,154 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:20:36,341 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:20:36,763 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:36,763 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:20:36,763 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:20:36,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:20:36,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:20:36,778 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:20:36,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:20:36,778 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:20:36,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:20:36,794 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:20:36,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:20:36,981 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:20:37,106 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:20:37,184 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:20:37,184 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:20:37,184 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:20:37,184 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:20:37,184 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:20:37,387 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:20:37,589 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:20:37,589 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:20:37,589 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:20:37,589 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:20:37,589 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:20:37,792 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:20:37,995 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:20:37,995 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:20:37,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:20:37,995 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:37,995 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:20:38,198 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:20:38,401 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:20:38,947 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:20:38,962 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:20:38,962 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:20:38,962 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:20:38,962 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:20:38,962 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:20:40,663 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:20:40,663 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 16:20:40,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:20:40,663 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:20:50,101 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:20:50,101 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:20:50,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:20:50,101 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:20:50,101 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:20:51,099 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:20:51,099 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:20:51,099 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:20:51,099 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:20:51,115 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:20:51,286 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:20:52,300 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:20:52,300 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:20:52,456 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:20:53,470 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:20:53,470 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:20:54,235 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:20:55,249 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:20:55,249 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:20:56,044 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:20:57,074 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:20:57,074 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:20:58,041 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:20:59,055 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:20:59,055 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:00,631 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:01,645 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:01,645 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:01,785 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:02,799 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:02,799 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:02,955 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:03,969 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:03,969 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:04,141 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:05,155 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:05,155 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:05,311 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:06,325 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:06,325 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:06,839 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:07,853 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:07,853 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:08,758 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:27,806 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:27,806 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:28,820 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:21:43,421 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:21:44,716 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:44,716 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:46,292 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:21:47,306 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:47,306 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:48,367 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:48,367 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:48,367 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:48,367 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:48,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:49,381 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:49,381 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:50,410 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:50,410 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:50,410 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:50,410 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:50,410 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:51,424 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:51,424 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:52,470 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:52,470 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:52,470 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:52,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:52,470 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:53,484 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:53,484 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:54,529 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:54,529 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:54,529 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:54,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:54,529 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:55,543 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:55,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:56,588 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:56,588 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:56,588 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:56,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:56,588 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:57,602 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:57,602 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:21:58,647 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:21:58,647 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:21:58,647 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:21:58,647 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:21:58,647 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:21:59,661 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:21:59,661 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:00,706 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:22:00,706 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:22:00,706 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:22:00,706 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:22:00,706 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:22:01,720 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:01,720 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:02,719 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:22:02,719 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:22:02,719 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:22:02,719 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:22:02,719 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:22:03,733 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:03,733 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:04,778 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CJ92]
2020-09-29 16:22:04,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:22:04,778 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:22:04,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:22:04,778 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:22:05,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:05,792 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:06,572 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:07,586 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:07,586 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:08,382 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:09,396 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:09,396 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:09,536 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:10,550 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:10,550 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:10,722 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:11,736 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:11,736 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:11,907 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:12,921 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:12,921 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:13,077 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:14,091 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:14,091 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:14,856 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:15,870 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:15,870 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:16,681 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:22:17,695 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:22:17,695 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:22:18,943 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:24:30,399 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:24:30,465 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:24:30,476 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:24:30,481 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 16:24:30,483 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 16:24:30,485 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:24:30,485 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:24:30,486 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:24:30,487 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:24:30,488 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 16:24:30,489 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:24:30,490 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:24:30,612 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 16:24:30,614 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:24:30,636 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:24:30,640 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:24:30,645 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:24:30,646 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:24:30,647 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:24:30,653 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:24:30,654 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:24:30,654 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:24:30,813 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:24:30,813 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:24:30,815 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:24:30,816 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:24:30,817 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:24:30,817 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:24:30,832 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:24:30,835 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:24:31,014 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:24:31,017 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:24:31,019 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:24:31,020 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:24:31,022 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:24:31,024 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:24:31,026 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:24:31,213 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:24:31,288 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:31,289 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:24:31,290 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:24:31,293 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:24:31,295 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:24:31,413 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:24:31,414 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:24:31,422 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:24:31,422 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:24:31,423 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:24:31,424 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:24:31,612 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:24:31,762 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:24:31,824 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:24:31,824 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:24:31,824 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:24:31,824 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:24:31,824 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:24:32,027 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:24:32,230 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:24:32,230 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:24:32,230 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:24:32,230 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:24:32,230 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:24:32,432 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:24:32,635 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:24:32,635 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:24:32,635 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:24:32,635 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:24:32,838 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:24:32,854 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:24:32,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:24:32,854 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:24:33,041 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:24:33,041 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:24:33,587 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:24:33,602 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:24:33,602 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:24:33,602 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:24:33,602 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:24:33,602 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:24:36,457 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:24:36,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 16:24:36,457 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:24:36,457 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:24:46,301 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:24:46,301 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:24:46,301 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:24:46,301 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:24:46,316 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:24:47,268 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:24:47,268 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:24:47,268 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:24:47,268 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:24:47,268 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:48,532 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:49,546 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:49,546 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:50,497 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:51,511 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:51,511 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:51,652 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:52,666 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:52,666 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:52,822 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:53,836 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:53,836 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:53,992 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:55,006 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:55,006 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:55,162 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:56,176 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:56,176 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:56,768 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:57,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:57,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:24:58,578 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:24:59,592 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:24:59,592 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:00,856 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:25:18,577 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:25:19,778 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:19,778 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:20,636 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:25:20,636 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:25:20,636 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:25:20,636 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:25:20,636 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:25:21,650 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:21,650 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:22,555 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:25:22,555 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:25:22,555 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:25:22,555 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:25:22,555 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:25:23,569 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:23,569 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:24,474 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:25:24,474 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:25:24,474 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:25:24,474 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:25:24,474 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:25:25,488 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:25,488 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:26,861 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:25:26,861 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:25:26,861 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:25:26,861 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:25:26,861 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:25:27,875 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:27,875 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:28,655 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:29,669 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:29,669 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:30,464 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:31,478 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:31,478 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:31,619 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:32,633 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:32,633 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:32,789 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:33,803 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:33,803 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:33,959 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:34,973 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:34,973 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:35,129 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:36,143 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:36,143 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:36,736 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:37,750 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:37,750 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:38,498 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:39,512 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:39,512 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:40,402 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:41,416 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:41,416 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:42,398 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:43,412 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:43,412 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:43,553 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:44,567 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:44,567 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:44,723 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:45,737 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:45,737 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:45,908 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:46,923 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:46,923 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:47,079 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:48,093 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:48,093 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:48,717 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:49,731 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:49,731 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:50,479 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:51,493 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:51,493 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:52,507 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:53,521 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:53,521 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:54,598 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:55,612 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:55,612 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:55,752 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:56,766 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:56,766 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:56,922 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:57,936 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:57,936 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:58,108 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:25:59,122 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:25:59,122 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:25:59,278 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:26:00,292 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:26:00,292 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:26:00,651 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:26:01,665 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:26:01,665 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:26:02,476 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:26:02,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:26:02,944 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:26:02,944 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:26:02,944 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:26:02,944 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:26:03,490 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:26:03,490 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:26:04,675 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:26:04,675 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:26:04,691 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:26:04,691 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:26:04,691 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:34:51,774 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:34:51,820 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:34:51,836 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:34:51,836 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:34:51,836 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:34:51,836 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:34:51,852 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:34:52,008 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-09-29 16:34:52,008 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:34:52,023 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:34:52,023 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:34:52,023 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:34:52,039 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:34:52,039 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:34:52,039 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:34:52,039 [Thread: 8       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:34:52,039 [Thread: 8       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:34:52,210 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:34:52,226 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:34:52,226 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:34:52,413 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:34:52,429 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:34:52,616 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:34:52,694 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:52,694 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:34:52,694 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:34:52,694 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:34:52,694 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:34:52,819 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:34:53,022 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:34:53,209 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:34:53,224 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:34:53,224 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:34:53,224 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:34:53,224 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:34:53,224 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:34:53,427 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:34:53,630 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:34:53,630 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:34:53,630 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:34:53,630 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:34:53,630 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:34:53,833 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:34:54,036 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:34:54,036 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:34:54,036 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:34:54,036 [Thread: 8       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:34:54,238 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:34:54,441 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:34:54,441 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:34:54,987 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:34:55,003 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:34:55,003 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:34:55,003 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:34:55,003 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:34:55,003 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:34:55,003 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:34:57,826 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:34:57,826 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:34:57,826 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:34:57,826 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:34:57,842 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:34:58,513 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:34:58,528 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:34:58,528 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:34:58,528 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:34:59,433 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:35:00,244 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:40:46,898 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:40:46,960 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:40:46,976 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:40:46,991 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:40:46,991 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:40:46,991 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:40:46,991 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:40:47,132 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:40:47,132 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:40:47,147 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:40:47,147 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:40:47,147 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:40:47,163 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:40:47,163 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:40:47,163 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:40:47,163 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:40:47,163 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:40:47,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:40:47,350 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:40:47,350 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:40:47,537 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:40:47,553 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:40:47,740 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:40:47,818 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:47,818 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:40:47,818 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:40:47,818 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:40:47,818 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:40:47,943 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:40:48,146 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:40:48,286 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:40:48,348 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:40:48,348 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:40:48,348 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:40:48,348 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:40:48,348 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:40:48,551 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:40:48,754 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:40:48,754 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:40:48,754 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:40:48,754 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:40:48,754 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:40:48,957 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:40:49,160 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:40:49,160 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:40:49,160 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:40:49,160 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:40:49,362 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:40:49,565 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:40:49,565 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:40:50,049 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:40:50,064 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:40:50,064 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:40:50,064 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:40:50,064 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:40:50,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:40:52,670 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:40:52,670 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:40:52,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:40:52,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:40:52,685 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:40:53,372 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:40:53,372 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:40:53,372 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:40:53,372 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:40:53,387 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:40:54,183 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:44:10,404 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:44:10,451 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:44:10,466 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:44:10,466 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:44:10,482 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:44:10,622 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:44:10,622 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:44:10,638 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:44:10,638 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:44:10,654 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:44:10,825 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:44:10,841 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:44:10,841 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:44:11,028 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:44:11,231 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:44:35,754 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:35,770 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:44:35,770 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:44:35,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:44:35,785 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:44:35,785 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:44:35,785 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:44:35,801 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:44:35,832 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:44:35,848 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:44:35,972 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:44:35,972 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:44:36,378 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:36,378 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:44:36,378 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:44:36,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:44:36,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:44:36,394 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:44:36,394 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:44:36,409 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:44:36,440 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:44:36,456 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:44:36,472 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:44:36,472 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:44:36,628 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:36,628 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:44:36,628 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:44:36,643 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:44:36,643 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:44:36,643 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:44:36,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:44:36,659 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:44:36,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:44:36,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:44:36,846 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:44:36,846 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:44:36,877 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:36,877 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:44:37,018 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:44:37,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:44:37,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:44:37,018 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:44:37,033 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:44:37,033 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:44:37,049 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:44:37,080 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:44:37,220 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:44:37,220 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:44:37,236 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:37,236 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:44:37,252 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:44:37,423 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:44:37,423 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:44:37,423 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:44:37,439 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:44:37,439 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:44:37,454 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:44:37,486 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:44:37,486 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:44:37,626 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:44:47,735 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:44:47,735 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:44:47,735 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:44:47,750 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:44:47,750 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:44:47,750 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:44:47,750 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:44:47,766 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:44:47,766 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:44:47,766 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:44:51,925 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:44:51,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:44:51,956 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:44:51,956 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:45:23,889 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:45:23,889 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:45:23,889 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:45:23,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:47:04,413 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:47:08,740 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:47:08,740 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:47:08,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:47:08,755 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:47:08,755 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:47:14,887 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:47:14,934 [Thread: 11      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:47:14,950 [Thread: 11      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Loading object definitions.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Loading object definitions...
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default init method ''.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:47:14,965 [Thread: 11      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:47:15,121 [Thread: 11      ] [DEBUG] -- Default init method ''.
2020-09-29 16:47:15,121 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:47:15,137 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:47:15,137 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:47:15,153 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:47:15,153 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:47:15,153 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:47:15,168 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:47:15,168 [Thread: 11      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:47:15,168 [Thread: 11      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:47:15,324 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:47:15,340 [Thread: 11      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:47:15,340 [Thread: 11      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:47:15,527 [Thread: 11      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:47:15,527 [Thread: 11      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:47:15,527 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:47:15,543 [Thread: 11      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:47:15,543 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:47:15,543 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:47:15,543 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:47:15,730 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:47:33,143 [Thread: 11      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:33,143 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:47:33,143 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:47:33,143 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:47:33,159 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:47:33,159 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:47:33,174 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:47:33,190 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:47:33,190 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:47:33,190 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:47:33,190 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:47:33,190 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:47:33,549 [Thread: 11      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:47:33,564 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:47:33,580 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:47:33,580 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:47:33,580 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:47:33,580 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:47:33,580 [Thread: 11      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:47:33,783 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:47:33,985 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:47:33,985 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:47:33,985 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:47:33,985 [Thread: 11      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:33,985 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:47:34,188 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:47:34,391 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:47:34,391 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:47:34,391 [Thread: 11      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:34,391 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:47:34,391 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:47:34,594 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:47:34,797 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:47:35,327 [Thread: 11      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:47:35,358 [Thread: 11      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:47:35,358 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:47:35,358 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:47:35,358 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:47:35,358 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:47:40,241 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:47:40,241 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:47:40,241 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:47:40,241 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:11,650 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:56:11,704 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:56:11,715 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:56:11,719 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 16:56:11,722 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 16:56:11,723 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:56:11,724 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:56:11,725 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:56:11,726 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:56:11,727 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:56:11,728 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:56:11,729 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:56:11,869 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 16:56:11,870 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:56:11,890 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:56:11,894 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:56:11,899 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:56:11,900 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:56:11,901 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:56:11,906 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:56:11,907 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:56:11,907 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:56:12,069 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:56:12,070 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:56:12,073 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:56:12,073 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:56:12,074 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:56:12,075 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:56:12,090 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:56:12,092 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:56:12,271 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:56:12,274 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:56:12,276 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:56:12,277 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:56:12,279 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:12,281 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:56:12,284 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:56:12,470 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:56:18,985 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:18,985 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:56:18,985 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:56:18,985 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:56:19,001 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:56:19,001 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:56:19,001 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:19,001 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:19,001 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:56:19,016 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:56:19,016 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:56:19,016 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:56:19,141 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:19,157 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:56:19,219 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:56:19,422 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:56:19,422 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:56:19,422 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:19,422 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:56:19,422 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:56:19,625 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:56:19,827 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:56:19,827 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:19,827 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:56:19,827 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:56:19,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:56:20,030 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:56:20,233 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:56:20,436 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:56:20,639 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:56:21,278 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:56:21,294 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:21,294 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:23,213 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:23,213 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:56:23,213 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:23,213 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:32,435 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:56:35,075 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:35,075 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:56:35,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:35,091 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:35,091 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:56:35,247 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:56:48,956 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:56:48,956 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:56:49,112 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:56:51,203 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:51,203 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:56:51,203 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:51,203 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:51,203 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:56:57,115 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:56:57,115 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:56:58,691 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:56:58,691 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:56:58,691 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:56:58,691 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:56:58,691 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 16:57:16,704 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:57:16,751 [Thread: 11      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:57:16,766 [Thread: 11      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:57:16,766 [Thread: 11      ] [DEBUG] -- Loading object definitions.
2020-09-29 16:57:16,766 [Thread: 11      ] [DEBUG] -- Loading object definitions...
2020-09-29 16:57:16,766 [Thread: 11      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:57:16,766 [Thread: 11      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:57:16,782 [Thread: 11      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:57:16,782 [Thread: 11      ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:57:16,782 [Thread: 11      ] [DEBUG] -- Default init method ''.
2020-09-29 16:57:16,782 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:57:16,782 [Thread: 11      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:57:16,922 [Thread: 11      ] [DEBUG] -- Default init method ''.
2020-09-29 16:57:16,922 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:57:16,938 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:57:16,938 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:57:16,953 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:57:16,953 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:57:16,953 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:57:16,969 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:57:16,969 [Thread: 11      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:57:16,969 [Thread: 11      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:57:17,125 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:57:17,141 [Thread: 11      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:57:17,141 [Thread: 11      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:57:17,328 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:57:17,531 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:57:17,609 [Thread: 11      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:17,609 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:57:17,609 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:57:17,609 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:57:17,609 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:57:17,733 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:57:17,733 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:57:17,749 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:57:17,749 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:57:17,749 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:57:17,749 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:57:17,936 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:57:18,186 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:57:18,389 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:57:18,389 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:57:18,389 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:57:18,389 [Thread: 11      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:18,389 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:57:18,591 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:57:18,607 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:57:18,794 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:57:18,794 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:57:18,794 [Thread: 11      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:18,794 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:57:18,794 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:57:18,997 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:57:19,200 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:57:19,200 [Thread: 11      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:19,200 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:57:19,200 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:57:19,200 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:57:19,403 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:57:19,605 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:57:20,136 [Thread: 11      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:57:20,136 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:57:20,151 [Thread: 11      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:57:20,167 [Thread: 11      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:57:20,167 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:57:20,167 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:57:20,167 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:57:20,167 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:57:23,209 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:57:23,209 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:57:23,209 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:57:23,209 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:57:23,225 [Thread: 13      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:57:26,048 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:57:26,048 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:57:26,064 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:57:26,064 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:57:26,079 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:57:26,251 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:57:29,262 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:57:29,262 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:57:29,418 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:57:32,429 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:57:32,429 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:57:32,959 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:57:35,970 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:57:35,970 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:57:36,875 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03911]
2020-09-29 16:57:36,906 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:57:36,906 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 16:57:36,906 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:57:36,906 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:57:58,855 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:57:58,855 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 16:57:58,855 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:57:58,855 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:57:58,871 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:57:58,871 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 16:57:58,871 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:57:58,871 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:58:02,240 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:02,240 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:03,020 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:06,031 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:06,031 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:06,827 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:09,838 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:09,838 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:10,633 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:13,644 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:13,644 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:13,800 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:16,811 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:16,811 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:16,967 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:19,978 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:19,978 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:20,149 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:23,160 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:23,160 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:23,316 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:26,327 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:26,327 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:26,920 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:29,930 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:29,930 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:30,960 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:33,971 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:33,971 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:58:35,125 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:58:38,011 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:58:38,011 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:58:38,011 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:58:38,011 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:58:38,011 [Thread: 11      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:58:38,136 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:58:38,136 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:58:39,883 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:58:39,883 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:58:39,883 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:58:39,883 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:58:39,883 [Thread: 11      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:59:00,912 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 16:59:00,982 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 16:59:00,993 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 16:59:00,999 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 16:59:01,001 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 16:59:01,003 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 16:59:01,004 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 16:59:01,005 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 16:59:01,006 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 16:59:01,008 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 16:59:01,009 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:59:01,010 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 16:59:01,177 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 16:59:01,178 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 16:59:01,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 16:59:01,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 16:59:01,207 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 16:59:01,208 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 16:59:01,209 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 16:59:01,217 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 16:59:01,218 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 16:59:01,219 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 16:59:01,378 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 16:59:01,378 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 16:59:01,381 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 16:59:01,381 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 16:59:01,382 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 16:59:01,383 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 16:59:01,398 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:59:01,400 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 16:59:01,579 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 16:59:01,582 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 16:59:01,585 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 16:59:01,586 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 16:59:01,588 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:01,591 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 16:59:01,596 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 16:59:01,778 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 16:59:01,872 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:01,873 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 16:59:01,874 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 16:59:01,877 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 16:59:01,879 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 16:59:01,978 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 16:59:01,979 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:01,987 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:01,988 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:59:01,989 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 16:59:01,989 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 16:59:02,177 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 16:59:02,334 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:02,335 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 16:59:02,336 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 16:59:02,336 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 16:59:02,337 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 16:59:02,338 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 16:59:02,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:59:02,378 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:59:02,379 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 16:59:02,379 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 16:59:02,380 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 16:59:02,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 16:59:02,780 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 16:59:02,780 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 16:59:02,780 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 16:59:02,780 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 16:59:02,780 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 16:59:02,983 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 16:59:03,186 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 16:59:03,186 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 16:59:03,186 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 16:59:03,186 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 16:59:03,388 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 16:59:03,591 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 16:59:03,591 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 16:59:04,137 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 16:59:04,153 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 16:59:04,153 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 16:59:04,153 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:04,153 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:59:04,153 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:04,153 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:09,379 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:09,379 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:59:09,379 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:09,379 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:09,379 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 16:59:10,143 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:10,143 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:59:10,143 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:10,143 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:10,159 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:11,079 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:13,092 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:13,092 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:13,232 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:15,244 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:15,244 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:15,400 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:17,413 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:17,413 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:17,584 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:19,597 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:19,597 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:19,753 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:21,765 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:21,765 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:22,296 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:24,308 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:24,308 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:25,338 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 16:59:25,353 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 16:59:25,353 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 16:59:25,353 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 16:59:25,353 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 16:59:31,687 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 16:59:31,687 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 16:59:31,890 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:31,890 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:59:31,890 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:31,890 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:31,890 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 16:59:32,670 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 16:59:32,685 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 16:59:34,105 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 16:59:34,105 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 16:59:34,120 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 16:59:34,120 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 16:59:34,120 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:03:53,795 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:03:53,857 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:03:53,873 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:03:53,888 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:03:53,888 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:03:53,904 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:03:54,029 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:03:54,029 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:03:54,044 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:03:54,044 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:03:54,060 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:03:54,232 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:03:54,247 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:03:54,247 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:03:54,434 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:03:54,450 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:03:54,637 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:03:54,746 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:54,746 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:03:54,746 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:03:54,746 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:03:54,762 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:03:54,840 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:03:55,043 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:03:55,168 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:55,168 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:03:55,168 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:03:55,183 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:03:55,183 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:03:55,183 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:03:55,246 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:03:55,246 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:03:55,246 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:03:55,246 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:03:55,246 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:03:55,448 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:03:55,651 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:03:55,651 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:03:55,651 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:03:55,651 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:03:55,651 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:03:55,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:03:56,057 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:03:56,057 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:03:56,057 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:03:56,057 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:03:56,260 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:03:56,462 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:03:56,462 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:03:57,180 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:03:57,196 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:03:57,196 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:03:57,196 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:03:57,196 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:03:57,196 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:04:00,893 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:04:00,893 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:04:00,908 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:04:00,908 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:04:00,908 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:04:01,907 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:04:01,907 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:04:01,907 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:04:01,907 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:04:01,907 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:04:02,812 [Thread: VCR Read thread] [DEBUG] -- Received [BR(0790ms)(01,00874ms)]
2020-09-29 17:04:02,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:04:02,827 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:04:02,827 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:04:02,827 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:04:12,499 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:04:12,499 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:04:13,295 [Thread: VCR Read thread] [DEBUG] -- Received [BR(0701ms)(01,00787ms)]
2020-09-29 17:04:13,295 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:04:13,295 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:04:13,295 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:04:13,295 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:04:18,334 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:04:18,334 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:04:19,129 [Thread: VCR Read thread] [DEBUG] -- Received [BR(0707ms)(01,00788ms)]
2020-09-29 17:04:19,129 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:04:19,129 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:04:19,129 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:04:19,129 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:04:26,352 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:04:26,352 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:04:26,492 [Thread: VCR Read thread] [DEBUG] -- Received [BR(0051ms)(01,00133ms)]
2020-09-29 17:04:26,492 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:04:26,492 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:04:26,492 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:04:26,508 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:04:27,959 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:04:27,959 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:04:27,959 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:04:27,959 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:04:27,959 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:04:29,378 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:04:29,378 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:05:19,626 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:05:19,626 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:05:19,626 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:05:19,626 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:05:19,626 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:05:19,798 [Thread: VCR Read thread] [DEBUG] -- Received [BR(0065ms)(01,00145ms)]
2020-09-29 17:14:22,181 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:14:22,249 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:14:22,260 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:14:22,265 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:14:22,267 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:14:22,269 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:14:22,269 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:14:22,270 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:14:22,271 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:14:22,272 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:14:22,273 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:14:22,274 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:14:22,413 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:14:22,414 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:14:22,434 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:14:22,438 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:14:22,443 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:14:22,444 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:14:22,445 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:14:22,450 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:14:22,451 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:14:22,452 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:14:22,614 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:14:22,615 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:14:22,617 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:14:22,617 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:14:22,618 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:14:22,619 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:14:22,634 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:14:22,636 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:14:22,815 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:14:22,818 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:14:22,820 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:14:22,821 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:14:22,823 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:14:22,826 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:14:22,828 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:14:23,014 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:14:23,098 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:23,100 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:14:23,102 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:14:23,104 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:14:23,106 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:14:23,214 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:14:23,216 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:14:23,224 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:14:23,225 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:14:23,225 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:14:23,226 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:14:23,416 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:14:23,552 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:23,553 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:14:23,554 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:14:23,554 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:14:23,555 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:14:23,556 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:14:23,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:14:23,617 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:14:23,618 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:14:23,618 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:14:23,619 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:14:23,816 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:14:23,818 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:23,819 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:14:23,820 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:14:23,822 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:14:23,824 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:14:23,825 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:14:23,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:14:24,016 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:14:24,017 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:14:24,018 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:14:24,018 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:14:24,019 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:14:24,217 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:24,218 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:14:24,218 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:14:24,219 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:14:24,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:14:24,220 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:14:24,221 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:14:24,221 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:14:24,222 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:14:24,416 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:14:24,417 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:14:24,418 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:14:24,420 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:24,616 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:14:24,617 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:14:24,618 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:14:24,618 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:14:24,619 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:14:24,620 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:14:24,623 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:14:24,624 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:14:24,624 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:14:24,816 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:14:24,817 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:14:25,316 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:14:25,317 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:14:25,318 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:14:25,319 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:14:25,319 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:14:25,320 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:14:25,320 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:14:25,321 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:14:25,322 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:14:25,337 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:14:25,338 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:14:25,339 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:14:25,340 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:14:25,340 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:14:26,602 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:14:26,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:14:26,605 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:14:26,606 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:14:26,615 [Thread: 3       ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:14:27,925 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:14:27,926 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:14:27,927 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:14:27,928 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:14:27,938 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:14:28,720 [Thread: VCR Read thread] [DEBUG] -- Received [(C000E000D000)BR]
2020-09-29 17:14:28,738 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:14:28,740 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:14:28,741 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:14:28,742 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:14:56,675 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:14:56,676 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:14:57,467 [Thread: VCR Read thread] [DEBUG] -- Received [(C000E000D000)BR]
2020-09-29 17:18:04,954 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:18:05,016 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 17:18:05,032 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:18:05,047 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:18:05,172 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 17:18:05,172 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:18:05,188 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:18:05,188 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:18:05,188 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:18:05,203 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:18:05,203 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:18:05,203 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:18:05,203 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:18:05,203 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:18:05,375 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:18:05,390 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:18:05,390 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:18:05,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:18:05,593 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:18:05,780 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:18:05,905 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:05,905 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:18:05,905 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:18:05,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:18:05,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:18:05,983 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:18:06,186 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:18:06,311 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:18:06,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:18:06,389 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:18:06,389 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:18:06,389 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:18:06,389 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:18:06,592 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:18:06,794 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:18:06,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:18:06,794 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:18:06,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:18:06,794 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:18:06,997 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:18:07,200 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:18:07,200 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:18:07,200 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:18:07,200 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:18:07,403 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:18:07,606 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:18:07,606 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:18:08,074 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:18:08,105 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:18:08,105 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:18:08,105 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:18:08,105 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:18:08,105 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:18:10,242 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:18:10,242 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:18:10,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:18:10,242 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:18:10,258 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:18:13,768 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:18:13,768 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:18:13,768 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:18:13,768 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:18:13,893 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:14,688 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:16,701 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:16,701 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:16,841 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:18,853 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:18,853 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:19,009 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:21,022 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:21,022 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:21,193 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:23,206 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:23,206 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:23,362 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:25,374 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:25,374 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:26,045 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:28,057 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:28,057 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:28,759 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:30,772 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:30,772 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:31,770 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:33,783 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:33,783 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:34,999 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:37,012 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:37,012 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:37,152 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:39,165 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:39,165 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:39,321 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:41,333 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:41,333 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:41,505 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:43,517 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:43,517 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:43,673 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:45,685 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:45,685 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:46,153 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:48,166 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:48,166 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:48,977 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:50,989 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:50,989 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:51,816 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:53,829 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:53,829 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:55,139 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:57,151 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:57,151 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:57,292 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:18:59,304 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:18:59,304 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:18:59,460 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:19:01,473 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:19:01,473 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:19:01,644 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:19:03,657 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:19:03,657 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:19:03,813 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:19:05,825 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:19:05,825 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:19:06,293 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:19:08,305 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:19:08,305 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:19:09,335 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:19:15,250 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:19:15,251 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:19:15,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:19:15,252 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:20:16,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:20:18,443 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:20:18,443 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:20:19,286 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:20:19,286 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:20:19,286 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:20:19,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:20:19,286 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:20:24,059 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:20:24,059 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:20:24,886 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:20:24,886 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:20:24,886 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:20:24,886 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:20:24,886 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:20:25,042 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:20:25,042 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:20:26,040 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:20:26,040 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:20:26,040 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:20:26,056 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:20:26,056 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:22:06,240 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:22:06,303 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:22:06,318 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:22:06,334 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:22:06,334 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:22:06,474 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:22:06,474 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:22:06,490 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:22:06,490 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:22:06,490 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:22:06,490 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:22:06,506 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:22:06,568 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:22:06,568 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:22:06,568 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:22:06,677 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:22:06,693 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:22:06,693 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:22:06,880 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:22:07,083 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:22:07,161 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:07,161 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:22:07,161 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:22:07,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:22:07,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:22:07,286 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:22:07,488 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:22:07,613 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:22:07,691 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:22:07,691 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:22:07,691 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:22:07,691 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:22:07,691 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:22:07,894 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:22:08,097 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:22:08,097 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:22:08,097 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:22:08,097 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:22:08,097 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:22:08,300 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:22:08,502 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:22:08,502 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:22:08,502 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:22:08,502 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:22:08,705 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:22:08,908 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:22:08,908 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:22:09,532 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:22:09,548 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:22:09,548 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:22:09,563 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:22:09,563 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:22:09,563 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:22:09,563 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:22:09,563 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:22:11,466 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:22:11,466 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:22:11,466 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:22:11,466 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:22:23,463 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:22:23,463 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:22:23,463 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:22:23,463 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:22:23,478 [Thread: 14      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:22:24,165 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:22:24,165 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:22:24,165 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:22:24,165 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:22:24,165 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:24,976 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:26,988 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:26,988 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:27,784 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:29,796 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:29,796 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:29,937 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:31,949 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:31,949 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:32,105 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:34,118 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:34,118 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:34,289 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:36,302 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:36,302 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:36,458 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:38,470 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:38,470 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:39,110 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:22:41,122 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:22:41,122 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:22:41,964 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:09,311 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:09,311 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:23:09,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:23:11,667 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:11,667 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:12,681 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:12,681 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:12,681 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:12,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:12,681 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:14,693 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:14,693 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:15,707 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:15,707 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:15,707 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:15,707 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:15,707 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:17,720 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:17,720 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:18,781 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:18,781 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:18,781 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:18,781 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:18,781 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:20,793 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:20,793 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:21,604 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:21,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:21,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:21,604 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:21,604 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:23,617 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:23,617 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:24,631 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:24,631 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:24,631 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:24,631 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:24,631 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:26,643 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:26,643 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:27,704 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:27,704 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:27,704 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:27,704 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:27,704 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:29,716 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:29,716 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:30,746 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:30,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:30,746 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:30,746 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:30,746 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:32,758 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:32,758 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:33,569 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:33,569 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:33,569 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:33,569 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:33,569 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:35,582 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:35,582 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:36,596 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:36,596 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:36,596 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:36,596 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:36,596 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:38,608 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:38,608 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:39,685 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:39,685 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:39,685 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:39,685 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:39,685 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:41,697 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:41,697 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:42,555 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:42,555 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:42,555 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:42,555 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:42,555 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:44,567 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:44,567 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:45,425 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:45,425 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:45,425 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:45,425 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:45,425 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:47,438 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:47,438 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:48,249 [Thread: VCR Read thread] [DEBUG] -- Received [02DBH0R373]
2020-09-29 17:23:48,249 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:23:48,249 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:23:48,249 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:23:48,249 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:23:50,261 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:50,261 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:51,041 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:23:53,054 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:53,054 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:53,849 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:23:55,862 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:55,862 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:56,657 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:23:58,670 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:23:58,670 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:23:58,810 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:00,823 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:00,823 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:00,979 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:02,991 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:02,991 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:03,163 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:05,175 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:05,175 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:05,331 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:07,343 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:07,343 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:08,108 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:10,120 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:10,120 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:10,931 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:12,944 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:12,944 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:13,739 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:15,752 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:15,752 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:16,672 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:24:16,672 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:24:18,965 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:18,965 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:19,745 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:21,758 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:21,758 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:21,898 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:23,911 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:23,911 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:24,067 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:26,079 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:26,079 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:26,251 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:28,263 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:28,263 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:28,419 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:30,431 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:30,431 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:31,196 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:33,208 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:33,208 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:34,004 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:36,016 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:36,016 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:36,625 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:38,637 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:38,637 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:39,667 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:41,679 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:41,679 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:41,819 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:43,832 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:43,832 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:43,988 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:46,000 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:46,000 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:46,156 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:48,169 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:48,169 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:48,325 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:50,337 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:50,337 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:50,821 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:52,833 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:52,833 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:53,769 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:55,781 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:55,781 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:56,717 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:24:58,730 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:24:58,730 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:24:59,884 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:01,897 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:01,897 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:02,037 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:04,049 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:04,049 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:04,205 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:06,218 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:06,218 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:06,374 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:08,386 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:08,386 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:08,542 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:10,555 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:10,555 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:11,070 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:13,082 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:13,082 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:14,002 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:16,015 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:16,015 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:16,779 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:18,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:18,792 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:19,696 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:21,709 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:21,709 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:21,849 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:23,862 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:23,862 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:24,018 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:26,030 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:26,030 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:26,202 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:28,214 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:28,214 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:28,370 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:30,382 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:30,382 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:30,897 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:32,910 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:32,910 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:33,846 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:35,858 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:35,858 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:36,810 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:38,822 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:38,822 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:39,945 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:41,958 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:41,958 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:42,098 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:44,110 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:44,110 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:44,266 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:46,279 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:46,279 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:46,450 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:48,463 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:48,463 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:48,619 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:50,631 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:50,631 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:51,396 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:53,408 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:53,408 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:54,219 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:25:56,232 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:25:56,232 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:25:57,136 [Thread: VCR Read thread] [DEBUG] -- Received [33E7J03A11]
2020-09-29 17:26:07,323 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:26:07,323 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:26:07,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:26:07,323 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:26:07,323 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:26:08,244 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:26:08,244 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:26:09,601 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:26:09,601 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:26:09,601 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:26:09,601 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:26:09,616 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:32:58,271 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:32:58,318 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:32:58,334 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:32:58,349 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:32:58,349 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:32:58,349 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:32:58,490 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:32:58,490 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:32:58,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:32:58,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:32:58,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:32:58,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:32:58,521 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:32:58,521 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:32:58,521 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:32:58,521 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:32:58,692 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:32:58,708 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:32:58,708 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:32:58,895 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:32:59,098 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:32:59,176 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:32:59,176 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:32:59,176 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:32:59,176 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:32:59,176 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:32:59,301 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:32:59,504 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:32:59,753 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:32:59,753 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:32:59,753 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:32:59,769 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:32:59,909 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:32:59,909 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:32:59,909 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:32:59,909 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:32:59,909 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:33:00,112 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:33:00,315 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:33:00,315 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:33:00,315 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:33:00,315 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:33:00,315 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:33:00,518 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:33:00,720 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:33:00,720 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:33:00,720 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:33:00,720 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:33:00,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:33:00,923 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:33:01,126 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:33:01,594 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:33:01,610 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:33:01,625 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:33:01,625 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:33:01,625 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:33:01,625 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:33:01,625 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:33:02,998 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:33:02,998 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:33:02,998 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:33:02,998 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:33:03,014 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:33:03,825 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:33:03,825 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:33:03,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:33:03,825 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:33:04,277 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:05,182 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:07,194 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:07,194 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:07,990 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:10,002 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:10,002 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:10,798 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:12,810 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:12,810 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:12,951 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:14,963 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:14,963 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:15,119 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:17,132 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:17,132 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:17,303 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:19,316 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:19,316 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:19,472 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:21,484 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:21,484 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:22,248 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:24,261 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:24,261 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:25,072 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:27,084 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:27,084 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:27,864 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:29,877 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:29,877 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:30,672 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:32,685 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:32,685 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:32,841 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:34,853 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:34,853 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:35,009 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:37,022 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:37,022 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:37,178 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:39,190 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:39,190 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:39,346 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:41,358 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:41,358 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:42,123 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:44,135 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:44,135 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:33:44,946 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:33:45,071 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:33:45,071 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:33:45,071 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:33:45,071 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:33:45,071 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:33:46,959 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:33:46,959 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:33:48,956 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:33:48,956 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:33:48,956 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:33:48,956 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:33:48,956 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:35:26,135 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:35:26,181 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:35:26,197 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:35:26,197 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-09-29 17:35:26,197 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-09-29 17:35:26,197 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:35:26,213 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:35:26,353 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-09-29 17:35:26,353 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:35:26,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:35:26,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:35:26,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:35:26,384 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:35:26,384 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:35:26,384 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:35:26,384 [Thread: 9       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:35:26,384 [Thread: 9       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:35:26,556 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:35:26,571 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:35:26,571 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:35:26,759 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:35:26,961 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:35:27,039 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:27,039 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:35:27,039 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:35:27,039 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:35:27,039 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:35:27,164 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:35:27,367 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:35:27,492 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:35:27,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:35:27,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:35:27,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:35:27,570 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:35:27,570 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:35:27,773 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:35:27,975 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:35:27,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:35:27,975 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:35:27,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:35:27,975 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:35:28,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:35:28,381 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:35:28,381 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:35:28,381 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:35:28,381 [Thread: 9       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:35:28,584 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:35:28,787 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:35:28,787 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:35:29,364 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:35:29,379 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:35:29,379 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:35:30,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:35:30,737 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:35:30,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:35:30,737 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:35:30,737 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:35:31,719 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:35:31,719 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:35:31,719 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:35:31,719 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:35:31,735 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:35:32,531 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:35:34,543 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:35:34,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:35:35,339 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:35:37,351 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:35:37,351 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:35:37,492 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:35:39,504 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:35:39,504 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:35:39,660 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:35:41,672 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:35:41,672 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:35:41,828 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:35:42,031 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:35:42,031 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:35:42,031 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:35:42,031 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:35:42,031 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:35:43,841 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:35:43,841 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:36:30,797 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:36:30,797 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:36:30,797 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:36:30,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:36:30,812 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:38:03,716 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:38:03,787 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:38:03,798 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:38:03,803 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:38:03,805 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:38:03,806 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:38:03,807 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:38:03,808 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:38:03,809 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:38:03,810 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:38:03,811 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:38:03,811 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:38:03,954 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:38:03,955 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:38:03,976 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:38:03,980 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:38:03,985 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:38:03,986 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:38:03,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:38:03,994 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:38:03,995 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:38:03,996 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:38:04,154 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:38:04,156 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:38:04,158 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:38:04,159 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:38:04,159 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:38:04,160 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:38:04,175 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:38:04,177 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:38:04,356 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:38:04,359 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:38:04,360 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:38:04,361 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:38:04,363 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:38:04,366 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:38:04,368 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:38:04,555 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:38:04,661 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:04,662 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:38:04,663 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:38:04,666 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:38:04,668 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:38:04,755 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:38:04,756 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:38:04,764 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:38:04,765 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:38:04,765 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:38:04,766 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:38:04,968 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:38:05,156 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:38:05,171 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:38:05,171 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:38:05,171 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:38:05,171 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:38:05,171 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:38:05,374 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:38:05,577 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:38:05,577 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:38:05,577 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:38:05,577 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:38:05,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:38:05,780 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:38:05,982 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:38:05,982 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:38:05,982 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:38:05,982 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:38:06,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:38:06,388 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:38:06,388 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:38:06,903 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:38:06,918 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:38:06,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:38:06,918 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:38:06,918 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:38:06,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:38:09,149 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:38:09,149 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:38:09,165 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:38:09,165 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:38:09,165 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:38:10,226 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:38:10,226 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:38:10,226 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:38:10,226 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:38:10,241 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:10,397 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:12,410 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:12,410 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:13,174 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:15,186 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:15,186 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:15,998 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:18,010 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:18,010 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:18,806 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:20,818 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:20,818 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:21,614 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:23,626 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:23,626 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:23,766 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:25,779 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:25,779 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:25,935 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:27,947 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:27,947 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:28,119 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:30,131 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:30,131 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:30,287 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:32,300 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:32,300 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:33,064 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:35,076 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:35,076 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:35,888 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:37,900 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:37,900 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:38,696 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:40,708 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:40,708 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:41,504 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:43,516 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:43,516 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:43,656 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:45,669 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:45,669 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:45,825 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:47,837 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:47,837 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:48,009 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:50,021 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:50,021 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:50,177 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:52,190 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:52,190 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:52,954 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:54,966 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:54,966 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:55,778 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:38:57,790 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:38:57,790 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:38:58,586 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:00,598 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:00,598 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:01,394 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:03,406 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:03,406 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:03,546 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:05,559 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:05,559 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:05,715 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:07,727 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:07,727 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:07,883 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:09,896 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:09,896 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:10,052 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:12,064 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:12,064 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:12,828 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:14,841 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:14,841 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:15,652 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:17,664 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:17,664 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:18,460 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:20,472 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:20,472 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:21,268 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:23,280 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:23,280 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:23,436 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:25,449 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:25,449 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:25,605 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:27,617 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:27,617 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:27,773 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:29,786 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:29,786 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:29,942 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:31,954 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:31,954 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:32,469 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:34,481 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:34,481 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:35,511 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:39:37,523 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:37,523 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:39:38,584 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:39:38,600 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:39:38,600 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:39:38,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:39:38,600 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:39:44,496 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:39:44,496 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:39:44,496 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:39:44,496 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:39:44,496 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:39:45,401 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:39:45,401 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:39:46,478 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:39:46,478 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:39:46,478 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:39:46,478 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:39:46,478 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:41:15,727 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:41:15,789 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:41:15,805 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:41:15,820 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:41:15,820 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:41:15,820 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:41:15,820 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:41:15,820 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:41:15,836 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:41:15,836 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:41:15,851 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:41:15,867 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:41:15,867 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:41:15,883 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:41:15,898 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:41:15,929 [Thread: 1       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:15,929 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:41:15,929 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:41:15,929 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:41:15,945 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:41:15,961 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:41:15,976 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:41:16,351 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:41:16,366 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:16,366 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:18,425 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:18,425 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:41:18,441 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:18,441 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:18,457 [Thread: 4       ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:41:19,517 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:19,517 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:41:19,517 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:19,517 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:19,517 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:20,313 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:22,325 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:22,325 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:23,121 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:25,165 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:25,165 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:25,305 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:27,317 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:27,317 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:27,473 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:29,486 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:29,486 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:29,657 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:31,670 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:31,670 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:31,841 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:33,854 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:33,854 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:34,618 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:36,631 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:36,631 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:37,442 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:39,454 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:39,454 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:40,250 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:42,262 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:42,262 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:43,058 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:45,070 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:45,070 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:45,226 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:47,239 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:47,239 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:47,410 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:49,423 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:49,423 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:41:49,594 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:41:49,860 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:49,860 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:41:49,860 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:49,860 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:49,875 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:41:51,607 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:41:51,607 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:41:52,574 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:41:52,590 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:41:52,590 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:41:52,590 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:41:52,590 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:43:34,208 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:43:34,271 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:43:34,286 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:43:34,286 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2020-09-29 17:43:34,286 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2020-09-29 17:43:34,286 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:43:34,302 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:43:34,317 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:43:34,333 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:43:34,349 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:43:34,349 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:43:34,364 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:43:34,380 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:43:34,411 [Thread: 1       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,411 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:43:34,411 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:43:34,411 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:43:34,427 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:43:34,442 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:43:34,458 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:43:34,770 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:43:34,770 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:43:36,002 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:43:36,002 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:43:36,002 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:43:36,002 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:43:36,033 [Thread: 4       ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:43:36,782 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:43:36,782 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:43:36,782 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:43:36,782 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:43:36,798 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:36,954 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:38,982 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:38,982 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:39,746 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:41,759 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:41,759 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:42,570 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:44,582 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:44,582 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:45,378 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:47,390 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:47,390 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:48,201 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:50,214 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:50,214 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:50,354 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:52,367 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:52,367 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:52,523 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:54,535 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:54,535 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:54,707 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:56,719 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:56,719 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:56,891 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:43:58,903 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:43:58,903 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:43:59,667 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:01,680 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:01,680 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:44:02,491 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:04,503 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:04,503 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:44:05,299 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:07,311 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:07,311 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:44:08,107 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:10,119 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:10,119 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:44:10,275 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:12,288 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:12,288 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:44:12,459 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:44:13,161 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:44:13,161 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:44:13,161 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:44:13,161 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:44:13,177 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:44:14,472 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:44:14,472 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:44:14,955 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:44:14,955 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:44:14,955 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:44:14,955 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:44:14,955 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:46:04,795 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:46:04,858 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:46:04,873 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:46:04,873 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-09-29 17:46:04,889 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:46:04,904 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:46:04,920 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:46:04,936 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:46:04,951 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:46:04,967 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:46:04,967 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:46:04,998 [Thread: 1       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:04,998 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:46:04,998 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:46:04,998 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:46:05,014 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:46:05,029 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:46:05,045 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:46:05,357 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:46:05,357 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:46:07,775 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:46:07,790 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:46:07,790 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:46:07,790 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:46:07,806 [Thread: 4       ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:46:08,524 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:46:08,524 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:46:08,524 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:46:08,524 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:46:08,539 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:08,711 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:10,723 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:10,723 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:10,879 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:12,907 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:12,907 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:13,672 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:15,684 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:15,684 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:16,495 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:18,508 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:18,508 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:19,303 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:21,316 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:21,316 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:22,111 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:24,124 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:24,124 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:24,264 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:26,276 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:26,276 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:26,432 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:28,445 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:28,445 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:28,601 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:30,613 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:30,613 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:30,769 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:32,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:32,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:33,406 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:35,418 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:35,418 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:36,323 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:46:36,323 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:46:36,323 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:46:36,323 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:46:36,338 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:46:49,864 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:49,864 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:50,846 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:52,859 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:52,859 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:53,670 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:55,682 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:55,682 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:56,899 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:46:58,912 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:46:58,912 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:46:59,052 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:01,064 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:01,064 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:01,220 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:03,233 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:03,233 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:03,389 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:05,401 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:05,401 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:05,557 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:07,570 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:07,570 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:08,084 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:10,097 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:10,097 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:10,705 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:12,718 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:12,718 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:13,466 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:15,479 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:15,479 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:16,540 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:18,552 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:18,552 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:18,693 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:20,705 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:20,705 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:20,877 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:22,889 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:22,889 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:23,061 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:25,073 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:25,073 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:25,229 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:27,241 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:27,241 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:27,772 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:47:29,784 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:29,784 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:47:30,845 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:47:30,845 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:47:30,845 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:47:30,845 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:47:30,845 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:47:36,804 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:47:36,804 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:47:36,804 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:47:36,804 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:47:36,804 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:47:37,428 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:47:37,428 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:47:40,891 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:47:40,891 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:47:40,891 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:47:40,891 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:47:40,891 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-09-29 17:51:24,801 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:51:24,864 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:51:24,864 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:51:24,879 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:51:25,020 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:51:25,020 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:51:25,035 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:51:25,035 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:51:25,051 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:51:25,223 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:51:25,238 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:51:25,238 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:51:25,425 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:51:25,628 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:51:25,722 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:25,722 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:51:25,722 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:51:25,737 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:51:25,737 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:51:25,831 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:51:25,831 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:51:25,831 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:51:25,847 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:51:25,847 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:51:25,847 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:51:26,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:51:26,205 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:51:26,237 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:51:26,237 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:51:26,237 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:51:26,237 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:51:26,237 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:51:26,439 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:51:26,642 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:51:26,642 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:51:26,642 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:51:26,642 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:51:26,642 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:51:26,845 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:51:27,048 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:51:27,048 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:51:27,048 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:51:27,048 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:51:27,251 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:51:27,453 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:51:27,453 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:51:28,077 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:51:28,093 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:51:28,093 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:51:28,093 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:51:28,093 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:51:28,093 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:51:32,383 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:51:32,399 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'defects'.
2020-09-29 17:51:32,399 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:51:32,399 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:51:42,804 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:51:42,804 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:51:42,804 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:51:42,804 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:51:42,804 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-09-29 17:51:43,319 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:51:43,334 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:51:43,334 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:51:43,334 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:51:43,334 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:51:44,130 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:51:46,142 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:51:46,142 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:51:46,938 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:51:48,950 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:51:48,950 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:51:49,964 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:51:58,778 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'db'.
2020-09-29 17:51:58,794 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:51:58,794 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:52:00,993 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:52:00,993 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:52:02,101 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:52:02,101 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:52:02,101 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:52:02,101 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:52:02,101 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:52:04,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:52:04,113 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:52:05,221 [Thread: VCR Read thread] [DEBUG] -- Received [48E1J0CB52]
2020-09-29 17:52:05,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:52:05,221 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'csvwriter'.
2020-09-29 17:52:05,221 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:52:05,221 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:52:07,233 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:52:07,233 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:52:08,013 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:52:10,026 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:52:10,026 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-09-29 17:52:10,182 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-09-29 17:52:10,291 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:52:10,291 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:52:10,291 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:52:10,307 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:52:10,307 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:52:12,194 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-09-29 17:52:12,194 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-09-29 17:52:13,442 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:52:13,442 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:52:13,442 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:52:13,442 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:52:13,442 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-09-29 17:27:51,618 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-09-29 17:27:51,684 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-09-29 17:27:51,698 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-09-29 17:27:51,702 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-09-29 17:27:51,704 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-09-29 17:27:51,706 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-09-29 17:27:51,707 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-09-29 17:27:51,708 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-09-29 17:27:51,709 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-09-29 17:27:51,710 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:27:51,710 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:27:51,711 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-09-29 17:27:51,872 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-09-29 17:27:51,873 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-09-29 17:27:51,890 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-09-29 17:27:51,893 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-09-29 17:27:51,898 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-09-29 17:27:51,899 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-09-29 17:27:51,900 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'prodlist'.
2020-09-29 17:27:51,905 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'db'.
2020-09-29 17:27:51,906 [Thread: 10      ] [DEBUG] -- Found 6 <object> elements defining objects.
2020-09-29 17:27:51,907 [Thread: 10      ] [DEBUG] -- Loaded 6 object definitions from location [spring-objects.xml]
2020-09-29 17:27:52,072 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-09-29 17:27:52,073 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-09-29 17:27:52,075 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-09-29 17:27:52,076 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-09-29 17:27:52,076 [Thread: 10      ] [DEBUG] -- 6 objects defined in application context [spring.root].
2020-09-29 17:27:52,077 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-09-29 17:27:52,088 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:27:52,090 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-09-29 17:27:52,273 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-09-29 17:27:52,285 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-09-29 17:27:52,287 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-09-29 17:27:52,288 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-09-29 17:27:52,290 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:27:52,292 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-09-29 17:27:52,294 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-09-29 17:27:52,473 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-09-29 17:27:52,578 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:52,579 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-09-29 17:27:52,580 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-09-29 17:27:52,583 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-09-29 17:27:52,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-09-29 17:27:52,672 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-09-29 17:27:52,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:27:52,676 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-09-29 17:27:52,677 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-09-29 17:27:52,682 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-09-29 17:27:52,683 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-09-29 17:27:52,872 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-09-29 17:27:53,064 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:53,065 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-09-29 17:27:53,065 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-09-29 17:27:53,066 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-09-29 17:27:53,067 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-09-29 17:27:53,068 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-09-29 17:27:53,072 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-09-29 17:27:53,073 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-09-29 17:27:53,074 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-09-29 17:27:53,075 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-09-29 17:27:53,076 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-09-29 17:27:53,272 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-09-29 17:27:53,274 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:53,275 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-09-29 17:27:53,276 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-09-29 17:27:53,277 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-09-29 17:27:53,278 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-09-29 17:27:53,279 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-09-29 17:27:53,280 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-09-29 17:27:53,472 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-09-29 17:27:53,473 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-09-29 17:27:53,474 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-09-29 17:27:53,475 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-09-29 17:27:53,476 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-09-29 17:27:53,673 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:53,674 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-09-29 17:27:53,675 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-09-29 17:27:53,675 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-09-29 17:27:53,676 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-09-29 17:27:53,677 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-09-29 17:27:53,678 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-09-29 17:27:53,679 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-09-29 17:27:53,680 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name prodlist => canonical name prodlist
2020-09-29 17:27:53,872 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'prodlist'
2020-09-29 17:27:53,884 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'prodlist' with merged definition [RootObjectDefinition : Class [MPC.ProductSpecColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2020-09-29 17:27:53,885 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'prodlist'.
2020-09-29 17:27:53,886 [Thread: 10      ] [DEBUG] -- Object 'prodlist' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:54,072 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'prodlist' to allow for resolving potential circular references
2020-09-29 17:27:54,073 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'prodlist'
2020-09-29 17:27:54,074 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'prodlist'
2020-09-29 17:27:54,075 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'prodlist'
2020-09-29 17:27:54,076 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'prodlist'
2020-09-29 17:27:54,077 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'prodlist'.
2020-09-29 17:27:54,078 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname prodlist
2020-09-29 17:27:54,079 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name db => canonical name db
2020-09-29 17:27:54,080 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'db'
2020-09-29 17:27:54,272 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'db' with merged definition [RootObjectDefinition : Class [FileDataLoader.DBSrv.OracleDBService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2020-09-29 17:27:54,273 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'db'.
2020-09-29 17:27:54,748 [Thread: 10      ] [DEBUG] -- Object 'db' instantiated via constructor [Void .ctor(System.String)].
2020-09-29 17:27:54,749 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'db' to allow for resolving potential circular references
2020-09-29 17:27:54,750 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'db'
2020-09-29 17:27:54,751 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'db'
2020-09-29 17:27:54,752 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'db'
2020-09-29 17:27:54,753 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'db'
2020-09-29 17:27:54,753 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'db'.
2020-09-29 17:27:54,754 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname db
2020-09-29 17:27:54,756 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-09-29 17:27:54,778 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-09-29 17:27:54,780 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-09-29 17:27:54,781 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-09-29 17:27:54,781 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-09-29 17:27:54,782 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
